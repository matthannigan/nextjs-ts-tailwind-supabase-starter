"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[6955],{5449:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"components/navigation/navigation-menu","title":"NavigationMenu Component","description":"A collection of accessible, customizable links for navigating websites with nested content support and smooth animations.","source":"@site/docs/components/navigation/navigation-menu.md","sourceDirName":"components/navigation","slug":"/components/navigation/navigation-menu","permalink":"/nextjs-ts-tailwind-supabase-starter/components/navigation/navigation-menu","draft":false,"unlisted":false,"editUrl":"https://github.com/matthannigan/nextjs-ts-tailwind-supabase-starter/tree/main/docs-website/docs/components/navigation/navigation-menu.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Navigation Menu"},"sidebar":"components","previous":{"title":"Navbar Mobile","permalink":"/nextjs-ts-tailwind-supabase-starter/components/navigation/navbar-mobile"},"next":{"title":"Basic UI Components","permalink":"/nextjs-ts-tailwind-supabase-starter/components/ui/"}}');var a=i(4848),s=i(8453);const o={sidebar_label:"Navigation Menu"},r="NavigationMenu Component",l={},d=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"With Next.js Link Components",id:"with-nextjs-link-components",level:3},{value:"With Content Grid",id:"with-content-grid",level:3},{value:"Component Structure",id:"component-structure",level:2},{value:"Props",id:"props",level:2},{value:"NavigationMenu",id:"navigationmenu",level:3},{value:"NavigationMenuContent",id:"navigationmenucontent",level:3},{value:"NavigationMenuLink",id:"navigationmenulink",level:3},{value:"NavigationMenuTrigger",id:"navigationmenutrigger",level:3},{value:"TypeScript",id:"typescript",level:2},{value:"Customization",id:"customization",level:2},{value:"Style Overrides",id:"style-overrides",level:3},{value:"Creating a Custom Navigation List Item",id:"creating-a-custom-navigation-list-item",level:3},{value:"Examples",id:"examples",level:2},{value:"Integration with Header Component",id:"integration-with-header-component",level:3},{value:"Mobile-Responsive Navigation Menu",id:"mobile-responsive-navigation-menu",level:3},{value:"Responsive Behavior",id:"responsive-behavior",level:3},{value:"Accessibility",id:"accessibility",level:2},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Common Pitfalls",id:"common-pitfalls",level:2},{value:"Testing",id:"testing",level:2},{value:"Related Components",id:"related-components",level:2}];function c(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"navigationmenu-component",children:"NavigationMenu Component"})}),"\n",(0,a.jsx)(e.p,{children:"A collection of accessible, customizable links for navigating websites with nested content support and smooth animations."}),"\n",(0,a.jsx)(e.h2,{id:"import",children:"Import"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-tsx",children:"import {\n  NavigationMenu,\n  NavigationMenuContent,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuList,\n  NavigationMenuTrigger,\n  NavigationMenuViewport,\n  NavigationMenuIndicator,\n  navigationMenuTriggerStyle,\n} from '@/components/ui/navigation-menu';\n"})}),"\n",(0,a.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(e.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-tsx",children:"<NavigationMenu>\n  <NavigationMenuList>\n    <NavigationMenuItem>\n      <NavigationMenuTrigger>Item One</NavigationMenuTrigger>\n      <NavigationMenuContent>\n        <NavigationMenuLink>Link</NavigationMenuLink>\n      </NavigationMenuContent>\n    </NavigationMenuItem>\n  </NavigationMenuList>\n</NavigationMenu>\n"})}),"\n",(0,a.jsx)(e.h3,{id:"with-nextjs-link-components",children:"With Next.js Link Components"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-tsx",children:"import Link from 'next/link';\n\n<NavigationMenu>\n  <NavigationMenuList>\n    <NavigationMenuItem>\n      <Link href=\"/docs\" legacyBehavior passHref>\n        <NavigationMenuLink className={navigationMenuTriggerStyle()}>\n          Documentation\n        </NavigationMenuLink>\n      </Link>\n    </NavigationMenuItem>\n  </NavigationMenuList>\n</NavigationMenu>\n"})}),"\n",(0,a.jsx)(e.h3,{id:"with-content-grid",children:"With Content Grid"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-tsx",children:'<NavigationMenu>\n  <NavigationMenuList>\n    <NavigationMenuItem>\n      <NavigationMenuTrigger>Getting Started</NavigationMenuTrigger>\n      <NavigationMenuContent>\n        <ul className="grid gap-3 p-6 md:w-[400px] lg:w-[500px] lg:grid-cols-2">\n          <li>\n            <NavigationMenuLink asChild>\n              <a href="/introduction" className="block p-2 rounded-md hover:bg-accent">\n                Introduction\n              </a>\n            </NavigationMenuLink>\n          </li>\n          <li>\n            <NavigationMenuLink asChild>\n              <a href="/installation" className="block p-2 rounded-md hover:bg-accent">\n                Installation\n              </a>\n            </NavigationMenuLink>\n          </li>\n        </ul>\n      </NavigationMenuContent>\n    </NavigationMenuItem>\n  </NavigationMenuList>\n</NavigationMenu>\n'})}),"\n",(0,a.jsx)(e.h2,{id:"component-structure",children:"Component Structure"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"NavigationMenu"}),": The root component that wraps the entire navigation menu structure"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"NavigationMenuList"}),": Contains the list of navigation items"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"NavigationMenuItem"}),": An individual navigation item"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"NavigationMenuTrigger"}),": Trigger button for dropdown content"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"NavigationMenuContent"}),": Content that appears when trigger is activated"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"NavigationMenuLink"}),": Navigation link that can be used directly or with asChild"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"NavigationMenuViewport"}),": Viewport container for displaying menu content"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"NavigationMenuIndicator"}),": Visual indicator for the active menu item"]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"props",children:"Props"}),"\n",(0,a.jsx)(e.h3,{id:"navigationmenu",children:"NavigationMenu"}),"\n",(0,a.jsxs)(e.table,{children:[(0,a.jsx)(e.thead,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.th,{children:"Prop"}),(0,a.jsx)(e.th,{children:"Type"}),(0,a.jsx)(e.th,{children:"Default"}),(0,a.jsx)(e.th,{children:"Description"})]})}),(0,a.jsxs)(e.tbody,{children:[(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"value"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"string"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"undefined"})}),(0,a.jsx)(e.td,{children:"The controlled value of the menu item to activate"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"defaultValue"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"string"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"undefined"})}),(0,a.jsx)(e.td,{children:"The value of the menu item that should be active when initially rendered"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"onValueChange"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"(value: string) => void"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"undefined"})}),(0,a.jsx)(e.td,{children:"Event handler called when the value changes"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"delayDuration"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"number"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"200"})}),(0,a.jsx)(e.td,{children:"The duration from when a menu item is hovered until the content is shown"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"skipDelayDuration"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"number"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"300"})}),(0,a.jsx)(e.td,{children:"The duration from when an item is no longer hovered until the content begins hiding"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"dir"})}),(0,a.jsx)(e.td,{children:'`"ltr"'}),(0,a.jsx)(e.td,{children:'"rtl"`'}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:'"ltr"'})})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"orientation"})}),(0,a.jsx)(e.td,{children:'`"horizontal"'}),(0,a.jsx)(e.td,{children:'"vertical"`'}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:'"horizontal"'})})]})]})]}),"\n",(0,a.jsx)(e.h3,{id:"navigationmenucontent",children:"NavigationMenuContent"}),"\n",(0,a.jsxs)(e.table,{children:[(0,a.jsx)(e.thead,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.th,{children:"Prop"}),(0,a.jsx)(e.th,{children:"Type"}),(0,a.jsx)(e.th,{children:"Default"}),(0,a.jsx)(e.th,{children:"Description"})]})}),(0,a.jsxs)(e.tbody,{children:[(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"forceMount"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"boolean"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"false"})}),(0,a.jsx)(e.td,{children:"Force mounting of the content when true"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"className"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"string"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"undefined"})}),(0,a.jsx)(e.td,{children:"Additional CSS classes to apply"})]})]})]}),"\n",(0,a.jsx)(e.h3,{id:"navigationmenulink",children:"NavigationMenuLink"}),"\n",(0,a.jsxs)(e.table,{children:[(0,a.jsx)(e.thead,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.th,{children:"Prop"}),(0,a.jsx)(e.th,{children:"Type"}),(0,a.jsx)(e.th,{children:"Default"}),(0,a.jsx)(e.th,{children:"Description"})]})}),(0,a.jsxs)(e.tbody,{children:[(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"asChild"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"boolean"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"false"})}),(0,a.jsx)(e.td,{children:"When true, component will render as its children instead of a default element"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"active"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"boolean"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"false"})}),(0,a.jsx)(e.td,{children:"Whether the link is currently active"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"className"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"string"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"undefined"})}),(0,a.jsx)(e.td,{children:"Additional CSS classes to apply"})]})]})]}),"\n",(0,a.jsx)(e.h3,{id:"navigationmenutrigger",children:"NavigationMenuTrigger"}),"\n",(0,a.jsxs)(e.table,{children:[(0,a.jsx)(e.thead,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.th,{children:"Prop"}),(0,a.jsx)(e.th,{children:"Type"}),(0,a.jsx)(e.th,{children:"Default"}),(0,a.jsx)(e.th,{children:"Description"})]})}),(0,a.jsxs)(e.tbody,{children:[(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"className"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"string"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"undefined"})}),(0,a.jsx)(e.td,{children:"Additional CSS classes to apply"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"children"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"ReactNode"})}),(0,a.jsx)(e.td,{children:"Required"}),(0,a.jsx)(e.td,{children:"Content for the trigger button"})]})]})]}),"\n",(0,a.jsx)(e.h2,{id:"typescript",children:"TypeScript"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-tsx",children:'// Component interface from Radix UI\ninterface NavigationMenuProps extends React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root> {\n  value?: string;\n  defaultValue?: string;\n  onValueChange?: (value: string) => void;\n  delayDuration?: number;\n  skipDelayDuration?: number;\n  dir?: "ltr" | "rtl";\n  orientation?: "horizontal" | "vertical";\n}\n\n// Link props\ninterface NavigationMenuLinkProps extends React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Link> {\n  asChild?: boolean;\n  active?: boolean;\n}\n\n// Content props\ninterface NavigationMenuContentProps extends React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content> {\n  forceMount?: boolean;\n}\n'})}),"\n",(0,a.jsx)(e.h2,{id:"customization",children:"Customization"}),"\n",(0,a.jsx)(e.h3,{id:"style-overrides",children:"Style Overrides"}),"\n",(0,a.jsx)(e.p,{children:"The component can be customized using the following approaches:"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsxs)(e.li,{children:["Using the ",(0,a.jsx)(e.code,{children:"className"})," prop to add additional Tailwind classes:"]}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-tsx",children:'<NavigationMenu className="bg-slate-100 dark:bg-slate-900 rounded-md">\n  {/* Navigation menu content */}\n</NavigationMenu>\n'})}),"\n",(0,a.jsxs)(e.ol,{start:"2",children:["\n",(0,a.jsxs)(e.li,{children:["Using the ",(0,a.jsx)(e.code,{children:"navigationMenuTriggerStyle"})," function for custom trigger styles:"]}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-tsx",children:"import { navigationMenuTriggerStyle } from '@/components/ui/navigation-menu';\n\n<NavigationMenuLink \n  className={cn(\n    navigationMenuTriggerStyle(),\n    \"font-bold text-green-600 dark:text-green-400\"\n  )}\n>\n  Custom Styled Link\n</NavigationMenuLink>\n"})}),"\n",(0,a.jsxs)(e.ol,{start:"3",children:["\n",(0,a.jsx)(e.li,{children:"Applying styles to child elements using CSS selector patterns:"}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-tsx",children:'<NavigationMenuContent className="p-4 [&>ul]:grid [&>ul]:grid-cols-2 [&>ul]:gap-4">\n  <ul>\n    <li>Item 1</li>\n    <li>Item 2</li>\n  </ul>\n</NavigationMenuContent>\n'})}),"\n",(0,a.jsx)(e.h3,{id:"creating-a-custom-navigation-list-item",children:"Creating a Custom Navigation List Item"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-tsx",children:"import {\n  NavigationMenuLink,\n  navigationMenuTriggerStyle,\n} from '@/components/ui/navigation-menu';\nimport { cn } from '@/lib/utils';\n\nconst ListItem = React.forwardRef<\n  React.ElementRef<'a'>,\n  React.ComponentPropsWithoutRef<'a'>\n>(({ className, title, children, ...props }, ref) => {\n  return (\n    <li>\n      <NavigationMenuLink asChild>\n        <a\n          ref={ref}\n          className={cn(\n            'block select-none space-y-1 rounded-md p-3 leading-none no-underline outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground',\n            className\n          )}\n          {...props}\n        >\n          <div className=\"text-sm font-medium leading-none\">{title}</div>\n          <p className=\"line-clamp-2 text-sm leading-snug text-muted-foreground\">\n            {children}\n          </p>\n        </a>\n      </NavigationMenuLink>\n    </li>\n  );\n});\nListItem.displayName = 'ListItem';\n"})}),"\n",(0,a.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(e.h3,{id:"integration-with-header-component",children:"Integration with Header Component"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-tsx",children:'import { \n  NavigationMenu, \n  NavigationMenuList, \n  NavigationMenuItem, \n  NavigationMenuTrigger,\n  NavigationMenuContent,\n  NavigationMenuLink,\n  navigationMenuTriggerStyle\n} from \'@/components/ui/navigation-menu\';\nimport Link from \'next/link\';\n\nexport function Header() {\n  return (\n    <header className="w-full py-4 px-6 border-b border-gray-200">\n      <div className="container mx-auto flex items-center justify-between">\n        <Link href="/" className="font-bold text-xl">\n          Your Logo\n        </Link>\n        \n        <NavigationMenu>\n          <NavigationMenuList>\n            <NavigationMenuItem>\n              <NavigationMenuTrigger>Products</NavigationMenuTrigger>\n              <NavigationMenuContent>\n                <ul className="grid w-[400px] gap-3 p-4 md:w-[500px] md:grid-cols-2">\n                  <li>\n                    <NavigationMenuLink asChild>\n                      <Link href="/products/software" className="block p-3 rounded-md hover:bg-accent">\n                        <div className="font-medium mb-1">Software</div>\n                        <p className="text-sm text-muted-foreground">Our software solutions</p>\n                      </Link>\n                    </NavigationMenuLink>\n                  </li>\n                  <li>\n                    <NavigationMenuLink asChild>\n                      <Link href="/products/hardware" className="block p-3 rounded-md hover:bg-accent">\n                        <div className="font-medium mb-1">Hardware</div>\n                        <p className="text-sm text-muted-foreground">Our hardware products</p>\n                      </Link>\n                    </NavigationMenuLink>\n                  </li>\n                </ul>\n              </NavigationMenuContent>\n            </NavigationMenuItem>\n            \n            <NavigationMenuItem>\n              <Link href="/about" legacyBehavior passHref>\n                <NavigationMenuLink className={navigationMenuTriggerStyle()}>\n                  About\n                </NavigationMenuLink>\n              </Link>\n            </NavigationMenuItem>\n            \n            <NavigationMenuItem>\n              <Link href="/contact" legacyBehavior passHref>\n                <NavigationMenuLink className={navigationMenuTriggerStyle()}>\n                  Contact\n                </NavigationMenuLink>\n              </Link>\n            </NavigationMenuItem>\n          </NavigationMenuList>\n        </NavigationMenu>\n      </div>\n    </header>\n  );\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"mobile-responsive-navigation-menu",children:"Mobile-Responsive Navigation Menu"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-tsx",children:'\'use client\';\n\nimport { useState } from \'react\';\nimport { \n  NavigationMenu, \n  NavigationMenuList, \n  NavigationMenuItem, \n  NavigationMenuTrigger,\n  NavigationMenuContent,\n  NavigationMenuLink,\n  navigationMenuTriggerStyle\n} from \'@/components/ui/navigation-menu\';\nimport { Button } from \'@/components/ui/button\';\nimport { Menu, X } from \'lucide-react\';\nimport Link from \'next/link\';\nimport { cn } from \'@/lib/utils\';\n\nexport function ResponsiveNavigation() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <nav className="w-full relative">\n      {/* Mobile menu button */}\n      <div className="md:hidden flex justify-end p-4">\n        <Button \n          variant="ghost" \n          size="icon" \n          onClick={() => setIsOpen(!isOpen)}\n          aria-label={isOpen ? "Close menu" : "Open menu"}\n        >\n          {isOpen ? <X /> : <Menu />}\n        </Button>\n      </div>\n      \n      {/* Navigation for desktop and mobile */}\n      <div className={cn(\n        "md:block",\n        isOpen ? "block" : "hidden"\n      )}>\n        <NavigationMenu className="w-full max-w-full justify-start md:justify-center">\n          <NavigationMenuList className="flex-col md:flex-row">\n            <NavigationMenuItem>\n              <NavigationMenuTrigger>Features</NavigationMenuTrigger>\n              <NavigationMenuContent>\n                <ul className="grid w-[200px] md:w-[400px] gap-3 p-4 md:grid-cols-2">\n                  <li>\n                    <NavigationMenuLink asChild>\n                      <a href="#feature-1" className="block p-2 rounded-md hover:bg-accent">\n                        Feature 1\n                      </a>\n                    </NavigationMenuLink>\n                  </li>\n                  <li>\n                    <NavigationMenuLink asChild>\n                      <a href="#feature-2" className="block p-2 rounded-md hover:bg-accent">\n                        Feature 2\n                      </a>\n                    </NavigationMenuLink>\n                  </li>\n                </ul>\n              </NavigationMenuContent>\n            </NavigationMenuItem>\n            \n            <NavigationMenuItem>\n              <Link href="/docs" legacyBehavior passHref>\n                <NavigationMenuLink className={navigationMenuTriggerStyle()}>\n                  Documentation\n                </NavigationMenuLink>\n              </Link>\n            </NavigationMenuItem>\n          </NavigationMenuList>\n        </NavigationMenu>\n      </div>\n    </nav>\n  );\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"responsive-behavior",children:"Responsive Behavior"}),"\n",(0,a.jsx)(e.p,{children:"The component responds to different screen sizes in the following ways:"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.strong,{children:"Mobile"}),":"]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"By default, the component is horizontally oriented and can overflow on small screens"}),"\n",(0,a.jsx)(e.li,{children:"Customizations are needed (as shown in example above) to make it fully responsive"}),"\n",(0,a.jsx)(e.li,{children:"Content appears as a dropdown below the trigger"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.strong,{children:"Tablet and Desktop"}),":"]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Full horizontal layout with space between items"}),"\n",(0,a.jsxs)(e.li,{children:["Content has more sophisticated positioning with ",(0,a.jsx)(e.code,{children:"md:w-auto"})," and ",(0,a.jsx)(e.code,{children:"md:absolute"})," classes"]}),"\n",(0,a.jsx)(e.li,{children:"Viewport has improved animations and styling with shadow effects"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"accessibility",children:"Accessibility"}),"\n",(0,a.jsx)(e.p,{children:"The NavigationMenu component follows these accessibility best practices:"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Adheres to the navigation role requirements from WAI-ARIA"}),"\n",(0,a.jsx)(e.li,{children:"Provides keyboard navigation with Tab, Enter, Space, Arrow keys"}),"\n",(0,a.jsx)(e.li,{children:"Supports screen readers with proper ARIA attributes"}),"\n",(0,a.jsxs)(e.li,{children:["Uses ",(0,a.jsx)(e.code,{children:'aria-hidden="true"'})," for decorative icons"]}),"\n",(0,a.jsx)(e.li,{children:"Includes proper focus management and visible focus styles"}),"\n",(0,a.jsx)(e.li,{children:"Content elements have proper ARIA roles and attributes from Radix UI"}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,a.jsx)(e.p,{children:"The component:"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Is built on top of Radix UI's Navigation Menu primitive"}),"\n",(0,a.jsxs)(e.li,{children:["Uses CSS variables for animation effects (via ",(0,a.jsx)(e.code,{children:"data-[state]"})," and ",(0,a.jsx)(e.code,{children:"data-[motion]"})," attributes)"]}),"\n",(0,a.jsx)(e.li,{children:"Implements responsive styles using Tailwind's mobile-first approach"}),"\n",(0,a.jsx)(e.li,{children:"Supports a viewport system for displaying content in a consistent, accessible way"}),"\n",(0,a.jsx)(e.li,{children:"Uses animated transitions for enhanced user experience"}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"common-pitfalls",children:"Common Pitfalls"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsxs)(e.p,{children:[(0,a.jsxs)(e.strong,{children:["Missing ",(0,a.jsx)(e.code,{children:"use client"})," directive"]}),": If you're creating a custom component with NavigationMenu, remember to add the ",(0,a.jsx)(e.code,{children:"'use client'"})," directive at the top of your file when using Next.js App Router."]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.strong,{children:"Incorrect usage with Next.js Links"}),": When using with Next.js Link component, make sure to use ",(0,a.jsx)(e.code,{children:"legacyBehavior"})," and ",(0,a.jsx)(e.code,{children:"passHref"})," props to properly pass the href to the NavigationMenuLink."]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.strong,{children:"Nested Navigation Menus"}),": Avoid nesting NavigationMenu components directly. Instead, create a single top-level NavigationMenu and use composition for complex navigation structures."]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.strong,{children:"Styling inconsistencies"}),": When applying custom styles, remember that some properties come from Radix UI primitives and might need specific selectors or data attributes to override."]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.strong,{children:"Missing Viewport component"}),": The NavigationMenuViewport is crucial for proper rendering of content. It's included by default in the NavigationMenu component, but if you're customizing, make sure it's included."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"testing",children:"Testing"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-tsx",children:"// Example test for the NavigationMenu component\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport {\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuTrigger,\n  NavigationMenuContent,\n  NavigationMenuLink,\n} from '@/components/ui/navigation-menu';\n\ndescribe('NavigationMenu', () => {\n  it('renders correctly', () => {\n    render(\n      <NavigationMenu>\n        <NavigationMenuList>\n          <NavigationMenuItem>\n            <NavigationMenuTrigger>Test Trigger</NavigationMenuTrigger>\n            <NavigationMenuContent>\n              <NavigationMenuLink>Test Link</NavigationMenuLink>\n            </NavigationMenuContent>\n          </NavigationMenuItem>\n        </NavigationMenuList>\n      </NavigationMenu>\n    );\n    \n    expect(screen.getByText('Test Trigger')).toBeInTheDocument();\n  });\n  \n  it('shows content when trigger is clicked', async () => {\n    render(\n      <NavigationMenu>\n        <NavigationMenuList>\n          <NavigationMenuItem>\n            <NavigationMenuTrigger>Test Trigger</NavigationMenuTrigger>\n            <NavigationMenuContent>\n              <NavigationMenuLink>Test Link</NavigationMenuLink>\n            </NavigationMenuContent>\n          </NavigationMenuItem>\n        </NavigationMenuList>\n      </NavigationMenu>\n    );\n    \n    const trigger = screen.getByText('Test Trigger');\n    await userEvent.click(trigger);\n    \n    // Content should now be visible\n    expect(screen.getByText('Test Link')).toBeVisible();\n  });\n});\n"})}),"\n",(0,a.jsx)(e.h2,{id:"related-components",children:"Related Components"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.a,{href:"/nextjs-ts-tailwind-supabase-starter/components/ui/dropdown-menu",children:"DropdownMenu"}),": Similar in functionality but designed for application commands rather than navigation links"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.a,{href:"/nextjs-ts-tailwind-supabase-starter/components/ui/tabs",children:"Tabs"}),": Another way to organize content into sections, but with a different interaction model"]}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(c,{...n})}):c(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>o,x:()=>r});var t=i(6540);const a={},s=t.createContext(a);function o(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:o(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);