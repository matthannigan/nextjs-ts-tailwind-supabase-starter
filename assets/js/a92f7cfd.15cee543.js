"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[5405],{6717:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"components/ui/content-card","title":"ContentCard Component","description":"A versatile card component that displays content with optional image, title, description, and footer. It\'s designed for presenting content previews with consistent styling and optional link functionality.","source":"@site/docs/components/ui/content-card.md","sourceDirName":"components/ui","slug":"/components/ui/content-card","permalink":"/nextjs-ts-tailwind-supabase-starter/components/ui/content-card","draft":false,"unlisted":false,"editUrl":"https://github.com/matthannigan/nextjs-ts-tailwind-supabase-starter/tree/main/docs-website/docs/components/ui/content-card.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Content Card"},"sidebar":"components","previous":{"title":"Container","permalink":"/nextjs-ts-tailwind-supabase-starter/components/ui/container"},"next":{"title":"Dialog","permalink":"/nextjs-ts-tailwind-supabase-starter/components/ui/dialog"}}');var s=t(4848),r=t(8453);const a={sidebar_label:"Content Card"},o="ContentCard Component",d={},c=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"With Image and Description",id:"with-image-and-description",level:3},{value:"With Link and Custom Footer",id:"with-link-and-custom-footer",level:3},{value:"Different Image Shapes",id:"different-image-shapes",level:3},{value:"Without Hover Effect",id:"without-hover-effect",level:3},{value:"Props",id:"props",level:2},{value:"TypeScript",id:"typescript",level:2},{value:"Customization",id:"customization",level:2},{value:"Style Overrides",id:"style-overrides",level:3},{value:"Extending the Component",id:"extending-the-component",level:3},{value:"Examples",id:"examples",level:2},{value:"Integration with Grid Layout",id:"integration-with-grid-layout",level:3},{value:"Integration with Data Fetching",id:"integration-with-data-fetching",level:3},{value:"Responsive Behavior",id:"responsive-behavior",level:3},{value:"Accessibility",id:"accessibility",level:2},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Common Pitfalls",id:"common-pitfalls",level:2},{value:"Testing",id:"testing",level:2},{value:"Related Components",id:"related-components",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"contentcard-component",children:"ContentCard Component"})}),"\n",(0,s.jsx)(n.p,{children:"A versatile card component that displays content with optional image, title, description, and footer. It's designed for presenting content previews with consistent styling and optional link functionality."}),"\n",(0,s.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { ContentCard } from '@/components/ui/content-card';\n"})}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<ContentCard title="Getting Started with Next.js" />\n'})}),"\n",(0,s.jsx)(n.h3,{id:"with-image-and-description",children:"With Image and Description"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<ContentCard \n  title="Introduction to TypeScript" \n  description="Learn the basics of TypeScript and how it improves your development workflow"\n  image={{\n    src: "/images/typescript-intro.jpg",\n    alt: "TypeScript logo on a laptop screen"\n  }}\n/>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"with-link-and-custom-footer",children:"With Link and Custom Footer"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<ContentCard\n  title="Supabase Authentication"\n  description="Implement secure authentication with Supabase in your Next.js application"\n  image={{\n    src: "/images/auth-example.jpg",\n    alt: "Login screen example"\n  }}\n  href="/tutorials/supabase-auth"\n  footer={\n    <div className="flex items-center justify-between w-full">\n      <span className="text-sm text-muted-foreground">5 min read</span>\n      <Button variant="outline" size="sm">Save</Button>\n    </div>\n  }\n/>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"different-image-shapes",children:"Different Image Shapes"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'// Square image (1:1 ratio)\n<ContentCard\n  title="Component Design"\n  image={{\n    src: "/images/component.jpg",\n    alt: "UI component diagram"\n  }}\n  imageShape="square"\n/>\n\n// Video shape (16:9 ratio)\n<ContentCard\n  title="Video Tutorial"\n  image={{\n    src: "/images/tutorial-thumbnail.jpg",\n    alt: "Tutorial thumbnail"\n  }}\n  imageShape="video"\n/>\n\n// Portrait image (3:4 ratio)\n<ContentCard\n  title="Team Member"\n  image={{\n    src: "/images/team-member.jpg",\n    alt: "Team member photo"\n  }}\n  imageShape="portrait"\n/>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"without-hover-effect",children:"Without Hover Effect"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<ContentCard\n  title="Static Card"\n  description="This card doesn\'t change appearance on hover"\n  hoverEffect={false}\n/>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Prop"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"title"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsx)(n.td,{children:"The main heading of the card"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"description"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"Optional text content describing the card content"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"image"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"{ src: string, alt: string }"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"Optional image to display at the top of the card"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"footer"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ReactNode"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"Optional custom footer content"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"href"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"Optional URL to make the entire card clickable as a link"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"className"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"Additional CSS classes to apply to the card"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"imageShape"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'square' | 'video' | 'portrait' | 'landscape'"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'landscape'"})}),(0,s.jsx)(n.td,{children:"Controls the aspect ratio of the image"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"hoverEffect"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"true"})}),(0,s.jsx)(n.td,{children:"Whether to show hover effects (border color change and shadow)"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"typescript",children:"TypeScript"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"interface ContentCardProps {\n  title: string;\n  description?: string;\n  image?: {\n    src: string;\n    alt: string;\n  };\n  footer?: ReactNode;\n  href?: string;\n  className?: string;\n  imageShape?: 'square' | 'video' | 'portrait' | 'landscape';\n  hoverEffect?: boolean;\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"customization",children:"Customization"}),"\n",(0,s.jsx)(n.h3,{id:"style-overrides",children:"Style Overrides"}),"\n",(0,s.jsx)(n.p,{children:"The component can be customized using the following approaches:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Using the ",(0,s.jsx)(n.code,{children:"className"})," prop to add additional Tailwind classes"]}),"\n",(0,s.jsxs)(n.li,{children:["Customizing the image aspect ratio with the ",(0,s.jsx)(n.code,{children:"imageShape"})," prop"]}),"\n",(0,s.jsxs)(n.li,{children:["Providing custom footer content with the ",(0,s.jsx)(n.code,{children:"footer"})," prop"]}),"\n",(0,s.jsxs)(n.li,{children:["Disabling hover effects with ",(0,s.jsx)(n.code,{children:"hoverEffect={false}"})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<ContentCard\n  title="Customized Card"\n  className="bg-slate-50 dark:bg-slate-900 border-2"\n/>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"extending-the-component",children:"Extending the Component"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import { ContentCard } from \'@/components/ui/content-card\';\nimport { Badge } from \'@/components/ui/badge\';\n\nexport function ArticleCard({ category, readTime, ...props }) {\n  return (\n    <ContentCard \n      {...props} \n      footer={\n        <div className="flex items-center justify-between w-full">\n          <Badge variant="outline">{category}</Badge>\n          <span className="text-sm text-muted-foreground">{readTime} min read</span>\n        </div>\n      }\n    />\n  );\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.h3,{id:"integration-with-grid-layout",children:"Integration with Grid Layout"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">\n  <ContentCard \n    title="First Article" \n    description="Description for the first article"\n    image={{ src: "/images/article1.jpg", alt: "Article 1" }}\n    href="/articles/first-article"\n  />\n  <ContentCard \n    title="Second Article" \n    description="Description for the second article"\n    image={{ src: "/images/article2.jpg", alt: "Article 2" }}\n    href="/articles/second-article"\n  />\n  <ContentCard \n    title="Third Article" \n    description="Description for the third article"\n    image={{ src: "/images/article3.jpg", alt: "Article 3" }}\n    href="/articles/third-article"\n  />\n</div>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"integration-with-data-fetching",children:"Integration with Data Fetching"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { ContentCard } from '@/components/ui/content-card';\n\ninterface Article {\n  id: string;\n  title: string;\n  description: string;\n  imageUrl: string;\n  slug: string;\n}\n\nexport function ArticleList() {\n  const [articles, setArticles] = useState<Article[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchArticles() {\n      try {\n        const response = await fetch('/api/articles');\n        const data = await response.json();\n        setArticles(data);\n      } catch (error) {\n        console.error('Error fetching articles:', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchArticles();\n  }, []);\n\n  if (loading) {\n    return <div>Loading articles...</div>;\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n      {articles.map((article) => (\n        <ContentCard\n          key={article.id}\n          title={article.title}\n          description={article.description}\n          image={{\n            src: article.imageUrl,\n            alt: article.title\n          }}\n          href={`/articles/${article.slug}`}\n        />\n      ))}\n    </div>\n  );\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"responsive-behavior",children:"Responsive Behavior"}),"\n",(0,s.jsx)(n.p,{children:"The component responds to different screen sizes in the following ways:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Mobile"}),": Card takes full width, title uses smaller font size"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tablet"}),": Multiple cards can be displayed in a grid, title font size increases"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Desktop"}),": Cards maintain consistent size with larger headings"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The responsive behavior is primarily controlled by the parent container. The ContentCard itself adapts to its container width, making it flexible for various layouts."}),"\n",(0,s.jsx)(n.h2,{id:"accessibility",children:"Accessibility"}),"\n",(0,s.jsx)(n.p,{children:"The component follows these accessibility best practices:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Title is rendered as an ",(0,s.jsx)(n.code,{children:"h3"})," heading by default for proper document structure"]}),"\n",(0,s.jsxs)(n.li,{children:["Images include required ",(0,s.jsx)(n.code,{children:"alt"})," text descriptions"]}),"\n",(0,s.jsx)(n.li,{children:"When used as a link, the entire card becomes clickable, increasing the target area"}),"\n",(0,s.jsx)(n.li,{children:"Text content uses appropriate color contrast with the background"}),"\n",(0,s.jsx)(n.li,{children:"Description is truncated with ellipsis to maintain visual consistency"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,s.jsx)(n.p,{children:"The component:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Builds upon the shadcn/ui ",(0,s.jsx)(n.code,{children:"Card"})," component with additional features"]}),"\n",(0,s.jsxs)(n.li,{children:["Uses Next.js ",(0,s.jsx)(n.code,{children:"Image"})," component for optimized image loading"]}),"\n",(0,s.jsx)(n.li,{children:"Truncates both title and description text with ellipsis after specified line counts"}),"\n",(0,s.jsx)(n.li,{children:"Provides consistent aspect ratios for images across the application"}),"\n",(0,s.jsxs)(n.li,{children:["Wraps content in a Next.js ",(0,s.jsx)(n.code,{children:"Link"})," component when ",(0,s.jsx)(n.code,{children:"href"})," is provided"]}),"\n",(0,s.jsxs)(n.li,{children:['Includes a default "Read more" button with arrow icon when ',(0,s.jsx)(n.code,{children:"href"})," is provided without custom footer"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"common-pitfalls",children:"Common Pitfalls"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Missing Image Alt Text"}),": Always provide descriptive ",(0,s.jsx)(n.code,{children:"alt"})," text when using images to maintain accessibility."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Long Titles or Descriptions"}),": Text is automatically truncated with ellipsis, which could cut off important information. Keep content concise or test to ensure truncation occurs at appropriate points."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Inconsistent Heights"}),": Cards may have different heights based on content. Consider using grid layouts with consistent card heights or limiting description length."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dark Mode Considerations"}),": Test the component in both light and dark modes to ensure proper contrast and visibility."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"// Example test for the ContentCard component\nimport { render, screen } from '@testing-library/react';\nimport { ContentCard } from '@/components/ui/content-card';\n\ndescribe('ContentCard', () => {\n  it('renders with title correctly', () => {\n    render(<ContentCard title=\"Test Card Title\" />);\n    expect(screen.getByText('Test Card Title')).toBeInTheDocument();\n  });\n  \n  it('renders with description when provided', () => {\n    render(\n      <ContentCard \n        title=\"Test Card\" \n        description=\"This is a test card description\" \n      />\n    );\n    expect(screen.getByText('This is a test card description')).toBeInTheDocument();\n  });\n  \n  it('wraps content in a link when href is provided', () => {\n    render(<ContentCard title=\"Test Card\" href=\"/test-page\" />);\n    const link = screen.getByRole('link');\n    expect(link).toBeInTheDocument();\n    expect(link).toHaveAttribute('href', '/test-page');\n  });\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"related-components",children:"Related Components"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/nextjs-ts-tailwind-supabase-starter/components/ui/card",children:"Card"}),": The base card component from shadcn/ui that ContentCard extends"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/nextjs-ts-tailwind-supabase-starter/components/ui/button",children:"Button"}),": Used in the default footer when providing an ",(0,s.jsx)(n.code,{children:"href"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/nextjs-ts-tailwind-supabase-starter/components/style/typography",children:"Typography"}),": Provides the ",(0,s.jsx)(n.code,{children:"Heading"})," component used for card titles"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(6540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);