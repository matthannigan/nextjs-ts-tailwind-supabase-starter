"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[5808],{7343:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>l,toc:()=>d});const l=JSON.parse('{"id":"components/forms/select","title":"Select Component","description":"A dropdown menu component that allows users to select from a list of options. The Select component provides a clean interface for user selection with accessible navigation and visual feedback.","source":"@site/docs/components/forms/select.md","sourceDirName":"components/forms","slug":"/components/forms/select","permalink":"/nextjs-ts-tailwind-supabase-starter/components/forms/select","draft":false,"unlisted":false,"editUrl":"https://github.com/matthannigan/nextjs-ts-tailwind-supabase-starter/tree/main/docs-website/docs/components/forms/select.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Select"},"sidebar":"components","previous":{"title":"Radio Group","permalink":"/nextjs-ts-tailwind-supabase-starter/components/forms/radio-group"},"next":{"title":"Switch","permalink":"/nextjs-ts-tailwind-supabase-starter/components/forms/switch"}}');var s=t(4848),r=t(8453);const c={sidebar_label:"Select"},o="Select Component",i={},d=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"With Groups and Labels",id:"with-groups-and-labels",level:3},{value:"Disabled State",id:"disabled-state",level:3},{value:"With Disabled Items",id:"with-disabled-items",level:3},{value:"Props",id:"props",level:2},{value:"Select Component",id:"select-component-1",level:3},{value:"SelectTrigger Component",id:"selecttrigger-component",level:3},{value:"SelectContent Component",id:"selectcontent-component",level:3},{value:"SelectItem Component",id:"selectitem-component",level:3},{value:"SelectLabel Component",id:"selectlabel-component",level:3},{value:"Other Components",id:"other-components",level:3},{value:"TypeScript",id:"typescript",level:2},{value:"Customization",id:"customization",level:2},{value:"Style Overrides",id:"style-overrides",level:3},{value:"Extending the Component",id:"extending-the-component",level:3},{value:"Examples",id:"examples",level:2},{value:"Integration with React Hook Form",id:"integration-with-react-hook-form",level:3},{value:"Integration with Other Components",id:"integration-with-other-components",level:3},{value:"Responsive Behavior",id:"responsive-behavior",level:3},{value:"Accessibility",id:"accessibility",level:2},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Common Pitfalls",id:"common-pitfalls",level:2},{value:"Testing",id:"testing",level:2},{value:"Related Components",id:"related-components",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"select-component",children:"Select Component"})}),"\n",(0,s.jsx)(n.p,{children:"A dropdown menu component that allows users to select from a list of options. The Select component provides a clean interface for user selection with accessible navigation and visual feedback."}),"\n",(0,s.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { \n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectTrigger,\n  SelectValue,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton\n} from '@/components/ui/select';\n"})}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<Select>\n  <SelectTrigger className="w-[180px]">\n    <SelectValue placeholder="Select an option" />\n  </SelectTrigger>\n  <SelectContent>\n    <SelectItem value="option1">Option 1</SelectItem>\n    <SelectItem value="option2">Option 2</SelectItem>\n    <SelectItem value="option3">Option 3</SelectItem>\n  </SelectContent>\n</Select>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"with-groups-and-labels",children:"With Groups and Labels"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<Select>\n  <SelectTrigger className="w-[220px]">\n    <SelectValue placeholder="Select a category" />\n  </SelectTrigger>\n  <SelectContent>\n    <SelectGroup>\n      <SelectLabel>Fruits</SelectLabel>\n      <SelectItem value="apple">Apple</SelectItem>\n      <SelectItem value="banana">Banana</SelectItem>\n      <SelectItem value="orange">Orange</SelectItem>\n    </SelectGroup>\n    <SelectSeparator />\n    <SelectGroup>\n      <SelectLabel>Vegetables</SelectLabel>\n      <SelectItem value="carrot">Carrot</SelectItem>\n      <SelectItem value="broccoli">Broccoli</SelectItem>\n      <SelectItem value="spinach">Spinach</SelectItem>\n    </SelectGroup>\n  </SelectContent>\n</Select>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"disabled-state",children:"Disabled State"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<Select disabled>\n  <SelectTrigger className="w-[180px]">\n    <SelectValue placeholder="Disabled" />\n  </SelectTrigger>\n  <SelectContent>\n    <SelectItem value="option1">Option 1</SelectItem>\n    <SelectItem value="option2">Option 2</SelectItem>\n  </SelectContent>\n</Select>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"with-disabled-items",children:"With Disabled Items"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<Select>\n  <SelectTrigger className="w-[180px]">\n    <SelectValue placeholder="Select an option" />\n  </SelectTrigger>\n  <SelectContent>\n    <SelectItem value="option1">Option 1</SelectItem>\n    <SelectItem value="option2" disabled>Option 2 (Disabled)</SelectItem>\n    <SelectItem value="option3">Option 3</SelectItem>\n  </SelectContent>\n</Select>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,s.jsx)(n.h3,{id:"select-component-1",children:"Select Component"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Prop"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"defaultValue"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"\u2014"}),(0,s.jsx)(n.td,{children:"The default selected value. Use for uncontrolled components."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"value"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"\u2014"}),(0,s.jsx)(n.td,{children:"The controlled selected value."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"onValueChange"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"(value: string) => void"})}),(0,s.jsx)(n.td,{children:"\u2014"}),(0,s.jsx)(n.td,{children:"Event handler called when the selected value changes."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"disabled"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"When true, prevents user interaction with the select."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"name"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"\u2014"}),(0,s.jsx)(n.td,{children:"The name of the select when used in a form."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"required"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Whether the select is required in a form."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"open"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:"\u2014"}),(0,s.jsx)(n.td,{children:"Controls the open state of the select dropdown."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"onOpenChange"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"(open: boolean) => void"})}),(0,s.jsx)(n.td,{children:"\u2014"}),(0,s.jsx)(n.td,{children:"Event handler called when the open state changes."})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"selecttrigger-component",children:"SelectTrigger Component"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Prop"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"className"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"\u2014"}),(0,s.jsx)(n.td,{children:"Additional CSS classes to apply to the trigger element."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"children"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ReactNode"})}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsx)(n.td,{children:"Content for the trigger (usually contains SelectValue)."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"asChild"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"When true, will treat child as the trigger element."})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"selectcontent-component",children:"SelectContent Component"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Prop"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"className"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"\u2014"}),(0,s.jsx)(n.td,{children:"Additional CSS classes to apply to the content element."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"children"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ReactNode"})}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsx)(n.td,{children:"Content for the dropdown menu."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"position"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'item' | 'popper'"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'popper'"})}),(0,s.jsx)(n.td,{children:"The positioning mode for the dropdown menu."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"side"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'top' | 'right' | 'bottom' | 'left'"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'bottom'"})}),(0,s.jsx)(n.td,{children:"The preferred side for the dropdown menu."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"sideOffset"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0"})}),(0,s.jsx)(n.td,{children:"Distance from the trigger to the dropdown menu."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"align"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'start' | 'center' | 'end'"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'center'"})}),(0,s.jsx)(n.td,{children:"Alignment of the dropdown menu relative to the trigger."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"alignOffset"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0"})}),(0,s.jsx)(n.td,{children:"Offset from the alignment point."})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"selectitem-component",children:"SelectItem Component"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Prop"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"value"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsx)(n.td,{children:"The value of this item that will be selected."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"className"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"\u2014"}),(0,s.jsx)(n.td,{children:"Additional CSS classes to apply to the item."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"children"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ReactNode"})}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsx)(n.td,{children:"Content for the item."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"disabled"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"When true, prevents this item from being selected."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"textValue"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"\u2014"}),(0,s.jsx)(n.td,{children:"Text used for typeahead purposes."})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"selectlabel-component",children:"SelectLabel Component"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Prop"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"className"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"\u2014"}),(0,s.jsx)(n.td,{children:"Additional CSS classes to apply to the label."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"children"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ReactNode"})}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsx)(n.td,{children:"Content for the label."})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"other-components",children:"Other Components"}),"\n",(0,s.jsxs)(n.p,{children:["Similar props apply to ",(0,s.jsx)(n.code,{children:"SelectGroup"}),", ",(0,s.jsx)(n.code,{children:"SelectValue"}),", ",(0,s.jsx)(n.code,{children:"SelectSeparator"}),", ",(0,s.jsx)(n.code,{children:"SelectScrollUpButton"})," and ",(0,s.jsx)(n.code,{children:"SelectScrollDownButton"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"typescript",children:"TypeScript"}),"\n",(0,s.jsx)(n.p,{children:"The component is fully typed based on Radix UI's Select primitive."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"// Component Type Examples\nimport { type SelectProps } from '@radix-ui/react-select';\n\n// For the root Select component\ntype CustomSelectProps = SelectProps & {\n  // Additional props\n};\n\n// For other subcomponents\ntype SelectTriggerProps = React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger> & {\n  // Additional props\n};\n"})}),"\n",(0,s.jsx)(n.h2,{id:"customization",children:"Customization"}),"\n",(0,s.jsx)(n.h3,{id:"style-overrides",children:"Style Overrides"}),"\n",(0,s.jsx)(n.p,{children:"The component can be customized using the following approaches:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Using the ",(0,s.jsx)(n.code,{children:"className"})," prop to add additional Tailwind classes to any part"]}),"\n",(0,s.jsxs)(n.li,{children:["Customizing the theme variables in your global CSS that affect the component:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"--select-trigger-height"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"--select-content-available-height"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"extending-the-component",children:"Extending the Component"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \'@/components/ui/select\';\n\nexport function CustomSelect({ options, ...props }) {\n  return (\n    <Select {...props}>\n      <SelectTrigger className="w-full">\n        <SelectValue placeholder="Select an option" />\n      </SelectTrigger>\n      <SelectContent>\n        {options.map((option) => (\n          <SelectItem key={option.value} value={option.value}>\n            {option.label}\n          </SelectItem>\n        ))}\n      </SelectContent>\n    </Select>\n  );\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.h3,{id:"integration-with-react-hook-form",children:"Integration with React Hook Form"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'\'use client\';\n\nimport { zodResolver } from \'@hookform/resolvers/zod\';\nimport { useForm } from \'react-hook-form\';\nimport { z } from \'zod\';\nimport { Button } from \'@/components/ui/button\';\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \'@/components/ui/form\';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \'@/components/ui/select\';\n\nconst formSchema = z.object({\n  role: z.string({\n    required_error: "Please select a role.",\n  }),\n});\n\nexport function RoleForm() {\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n  });\n\n  function onSubmit(values: z.infer<typeof formSchema>) {\n    console.log(values);\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-8">\n        <FormField\n          control={form.control}\n          name="role"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Role</FormLabel>\n              <Select \n                onValueChange={field.onChange} \n                defaultValue={field.value}\n              >\n                <FormControl>\n                  <SelectTrigger>\n                    <SelectValue placeholder="Select a role" />\n                  </SelectTrigger>\n                </FormControl>\n                <SelectContent>\n                  <SelectItem value="admin">Admin</SelectItem>\n                  <SelectItem value="user">User</SelectItem>\n                  <SelectItem value="guest">Guest</SelectItem>\n                </SelectContent>\n              </Select>\n              <FormDescription>\n                Select the user\'s role for permissions.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type="submit">Submit</Button>\n      </form>\n    </Form>\n  );\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"integration-with-other-components",children:"Integration with Other Components"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import { Card, CardContent, CardFooter, CardHeader, CardTitle } from \'@/components/ui/card\';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \'@/components/ui/select\';\nimport { Button } from \'@/components/ui/button\';\n\nexport function SelectCard() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Preferences</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className="grid gap-4">\n          <div className="flex flex-col space-y-1.5">\n            <label htmlFor="theme">Theme</label>\n            <Select>\n              <SelectTrigger id="theme">\n                <SelectValue placeholder="Select a theme" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value="light">Light</SelectItem>\n                <SelectItem value="dark">Dark</SelectItem>\n                <SelectItem value="system">System</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n      </CardContent>\n      <CardFooter>\n        <Button>Save changes</Button>\n      </CardFooter>\n    </Card>\n  );\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"responsive-behavior",children:"Responsive Behavior"}),"\n",(0,s.jsx)(n.p,{children:"The component responds to different screen sizes primarily through width customization:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Mobile"}),": Use ",(0,s.jsx)(n.code,{children:"w-full"})," on the ",(0,s.jsx)(n.code,{children:"SelectTrigger"})," for full width buttons"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tablet & Desktop"}),": Customize width as needed with ",(0,s.jsx)(n.code,{children:"w-[180px]"}),", ",(0,s.jsx)(n.code,{children:"w-1/2"}),", etc."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"All Screen Sizes"}),": The dropdown content automatically positions itself optimally based on available space"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'// Example of responsive width\n<SelectTrigger className="w-full md:w-[250px] lg:w-[300px]">\n  <SelectValue placeholder="Select an option" />\n</SelectTrigger>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"accessibility",children:"Accessibility"}),"\n",(0,s.jsx)(n.p,{children:"The component follows these accessibility best practices:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Keyboard navigation: Tab to focus, Space/Enter to open, arrows to navigate, Enter to select"}),"\n",(0,s.jsx)(n.li,{children:"Screen reader announcements for open/close and selected items"}),"\n",(0,s.jsxs)(n.li,{children:["ARIA attributes for ",(0,s.jsx)(n.code,{children:"aria-expanded"}),", ",(0,s.jsx)(n.code,{children:"aria-controls"}),", and ",(0,s.jsx)(n.code,{children:"aria-selected"})]}),"\n",(0,s.jsx)(n.li,{children:"Focus management when navigating through items and opening/closing the menu"}),"\n",(0,s.jsx)(n.li,{children:"Typeahead functionality for quick selection by typing"}),"\n",(0,s.jsx)(n.li,{children:"Support for form validation and error messaging"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,s.jsx)(n.p,{children:"The component:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Is built on top of the Radix UI ",(0,s.jsx)(n.code,{children:"Select"})," primitive for robust accessibility"]}),"\n",(0,s.jsx)(n.li,{children:"Uses Tailwind CSS for styling with dark mode support"}),"\n",(0,s.jsx)(n.li,{children:"Contains animated transitions for open/close states"}),"\n",(0,s.jsx)(n.li,{children:"Handles overflow with scroll buttons when content exceeds available space"}),"\n",(0,s.jsx)(n.li,{children:"Includes visual indicators for selected items and focused states"}),"\n",(0,s.jsx)(n.li,{children:"Supports controlled and uncontrolled usage patterns"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"common-pitfalls",children:"Common Pitfalls"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Form Integration Issues"}),": When using with React Hook Form, ensure you use the ",(0,s.jsx)(n.code,{children:"onValueChange"})," prop for updating the form value and place the ",(0,s.jsx)(n.code,{children:"<Select>"})," component within a ",(0,s.jsx)(n.code,{children:"<FormControl>"})," component."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Default Value Not Showing"}),": For controlled components, make sure to pass both ",(0,s.jsx)(n.code,{children:"value"})," and ",(0,s.jsx)(n.code,{children:"onValueChange"})," props. For uncontrolled, use ",(0,s.jsx)(n.code,{children:"defaultValue"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Focus Management"}),": In complex forms, you may need to manage focus explicitly if users need to navigate through multiple selects in sequence."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Style Conflicts"}),": If you have global styles affecting form elements, they might interfere with the Select component. Use more specific selectors in your custom CSS if needed."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Z-index Issues"}),": If the dropdown appears behind other elements, you may need to adjust the z-index of parent containers that use ",(0,s.jsx)(n.code,{children:"position: relative"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"// Example test for the component\nimport { render, screen, within } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\n\ndescribe('Select', () => {\n  it('renders the trigger correctly', () => {\n    render(\n      <Select>\n        <SelectTrigger>\n          <SelectValue placeholder=\"Select an option\" />\n        </SelectTrigger>\n        <SelectContent>\n          <SelectItem value=\"option1\">Option 1</SelectItem>\n          <SelectItem value=\"option2\">Option 2</SelectItem>\n        </SelectContent>\n      </Select>\n    );\n    \n    expect(screen.getByText('Select an option')).toBeInTheDocument();\n  });\n  \n  it('opens the dropdown and selects an option', async () => {\n    const onValueChangeMock = jest.fn();\n    const user = userEvent.setup();\n    \n    render(\n      <Select onValueChange={onValueChangeMock}>\n        <SelectTrigger>\n          <SelectValue placeholder=\"Select an option\" />\n        </SelectTrigger>\n        <SelectContent>\n          <SelectItem value=\"option1\">Option 1</SelectItem>\n          <SelectItem value=\"option2\">Option 2</SelectItem>\n        </SelectContent>\n      </Select>\n    );\n    \n    // Click the trigger to open the dropdown\n    await user.click(screen.getByText('Select an option'));\n    \n    // Find and click an option\n    const option1 = screen.getByText('Option 1');\n    await user.click(option1);\n    \n    // Check if the callback was called with the correct value\n    expect(onValueChangeMock).toHaveBeenCalledWith('option1');\n  });\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"related-components",children:"Related Components"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/nextjs-ts-tailwind-supabase-starter/components/ui/dropdown-menu",children:"Dropdown Menu"}),": Similar to Select but for actions rather than selections"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Combobox"}),": Combines a text input with a dropdown for searching and selecting from a list"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/nextjs-ts-tailwind-supabase-starter/components/forms/input",children:"Input"}),": Used in forms alongside the Select component"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/nextjs-ts-tailwind-supabase-starter/components/forms/form",children:"Form"}),": Container component for building forms that include Select fields"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var l=t(6540);const s={},r=l.createContext(s);function c(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);