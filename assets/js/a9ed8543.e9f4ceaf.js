"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[3056],{1349:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"components/ui/popover","title":"Popover Component","description":"The Popover component displays rich content in a portal when triggered by a button. It remains open until the user clicks either the trigger button again or anywhere else on the document.","source":"@site/docs/components/ui/popover.md","sourceDirName":"components/ui","slug":"/components/ui/popover","permalink":"/nextjs-ts-tailwind-supabase-starter/components/ui/popover","draft":false,"unlisted":false,"editUrl":"https://github.com/matthannigan/nextjs-ts-tailwind-supabase-starter/tree/main/docs-website/docs/components/ui/popover.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Popover"},"sidebar":"components","previous":{"title":"Dropdown Menu","permalink":"/nextjs-ts-tailwind-supabase-starter/components/ui/dropdown-menu"},"next":{"title":"Search Input","permalink":"/nextjs-ts-tailwind-supabase-starter/components/ui/search-input"}}');var r=t(4848),i=t(8453);const s={sidebar_label:"Popover"},l="Popover Component",d={},c=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"With Custom Trigger",id:"with-custom-trigger",level:3},{value:"With Form Elements",id:"with-form-elements",level:3},{value:"With Controlled State",id:"with-controlled-state",level:3},{value:"Props",id:"props",level:2},{value:"Popover Props",id:"popover-props",level:3},{value:"PopoverTrigger Props",id:"popovertrigger-props",level:3},{value:"PopoverContent Props",id:"popovercontent-props",level:3},{value:"TypeScript",id:"typescript",level:2},{value:"Customization",id:"customization",level:2},{value:"Style Overrides",id:"style-overrides",level:3},{value:"Extending the Component",id:"extending-the-component",level:3},{value:"Examples",id:"examples",level:2},{value:"Integration with React Hook Form",id:"integration-with-react-hook-form",level:3},{value:"Integration with Other Components",id:"integration-with-other-components",level:3},{value:"Responsive Behavior",id:"responsive-behavior",level:3},{value:"Accessibility",id:"accessibility",level:2},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Common Pitfalls",id:"common-pitfalls",level:2},{value:"Testing",id:"testing",level:2},{value:"Related Components",id:"related-components",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"popover-component",children:"Popover Component"})}),"\n",(0,r.jsx)(n.p,{children:"The Popover component displays rich content in a portal when triggered by a button. It remains open until the user clicks either the trigger button again or anywhere else on the document."}),"\n",(0,r.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { Popover, PopoverTrigger, PopoverContent } from '@/components/ui/popover';\n"})}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"<Popover>\n  <PopoverTrigger>Open</PopoverTrigger>\n  <PopoverContent>\n    Place content for the popover here.\n  </PopoverContent>\n</Popover>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"with-custom-trigger",children:"With Custom Trigger"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'import { Button } from \'@/components/ui/button\';\n\n<Popover>\n  <PopoverTrigger asChild>\n    <Button variant="outline">Open Settings</Button>\n  </PopoverTrigger>\n  <PopoverContent>\n    <div className="grid gap-4">\n      <div className="space-y-2">\n        <h4 className="font-medium leading-none">Settings</h4>\n        <p className="text-sm text-muted-foreground">\n          Configure your preferences here.\n        </p>\n      </div>\n    </div>\n  </PopoverContent>\n</Popover>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"with-form-elements",children:"With Form Elements"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'import { Button } from \'@/components/ui/button\';\nimport { Input } from \'@/components/ui/input\';\nimport { Label } from \'@/components/ui/label\';\n\n<Popover>\n  <PopoverTrigger asChild>\n    <Button variant="outline">Open Dimensions</Button>\n  </PopoverTrigger>\n  <PopoverContent className="w-80">\n    <div className="grid gap-4">\n      <div className="space-y-2">\n        <h4 className="font-medium leading-none">Dimensions</h4>\n        <p className="text-sm text-muted-foreground">\n          Set the dimensions for the layer.\n        </p>\n      </div>\n      <div className="grid gap-2">\n        <div className="grid grid-cols-3 items-center gap-4">\n          <Label htmlFor="width">Width</Label>\n          <Input id="width" defaultValue="100%" className="col-span-2 h-8" />\n        </div>\n        <div className="grid grid-cols-3 items-center gap-4">\n          <Label htmlFor="maxWidth">Max. width</Label>\n          <Input id="maxWidth" defaultValue="300px" className="col-span-2 h-8" />\n        </div>\n        <div className="grid grid-cols-3 items-center gap-4">\n          <Label htmlFor="height">Height</Label>\n          <Input id="height" defaultValue="25px" className="col-span-2 h-8" />\n        </div>\n        <div className="grid grid-cols-3 items-center gap-4">\n          <Label htmlFor="maxHeight">Max. height</Label>\n          <Input id="maxHeight" defaultValue="none" className="col-span-2 h-8" />\n        </div>\n      </div>\n    </div>\n  </PopoverContent>\n</Popover>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"with-controlled-state",children:"With Controlled State"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'import { useState } from \'react\';\nimport { Button } from \'@/components/ui/button\';\n\nconst MyComponent = () => {\n  const [open, setOpen] = useState(false);\n  \n  return (\n    <Popover open={open} onOpenChange={setOpen}>\n      <PopoverTrigger asChild>\n        <Button variant="outline">\n          {open ? \'Close\' : \'Open\'} Settings\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent>\n        <div className="grid gap-4">\n          <div className="space-y-2">\n            <h4 className="font-medium leading-none">Settings</h4>\n            <p className="text-sm text-muted-foreground">\n              This is a controlled popover, managed by state.\n            </p>\n          </div>\n          <Button onClick={() => setOpen(false)}>Close</Button>\n        </div>\n      </PopoverContent>\n    </Popover>\n  );\n};\n'})}),"\n",(0,r.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,r.jsx)(n.h3,{id:"popover-props",children:"Popover Props"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Prop"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"open"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"Controls the open state of the popover when using controlled mode"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"defaultOpen"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"The initial open state when uncontrolled"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onOpenChange"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"(open: boolean) => void"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"Event handler called when the open state changes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"modal"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"When true, interaction with outside elements will be disabled and only popover content will be visible to screen readers"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"popovertrigger-props",children:"PopoverTrigger Props"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Prop"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"asChild"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"When true, the trigger will use the child element as its trigger instead of wrapping it"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"All HTML button attributes"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ButtonHTMLAttributes<HTMLButtonElement>"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"Supports all HTML button attributes"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"popovercontent-props",children:"PopoverContent Props"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Prop"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"align"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"'start' | 'center' | 'end'"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"'center'"})}),(0,r.jsx)(n.td,{children:"Alignment of the popover relative to the trigger"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"sideOffset"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"4"})}),(0,r.jsx)(n.td,{children:"Distance in pixels from the trigger"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"alignOffset"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"0"})}),(0,r.jsx)(n.td,{children:"Additional offset along the alignment axis"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"avoidCollisions"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"true"})}),(0,r.jsx)(n.td,{children:"Whether to move content to avoid collisions with the viewport edges"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"collisionBoundary"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Element | null | Array<Element | null>"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"[]"})}),(0,r.jsx)(n.td,{children:"Element(s) to avoid collisions with"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"collisionPadding"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number | Partial<Record<Side, number>>"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"0"})}),(0,r.jsx)(n.td,{children:"Space between content and the boundary"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"arrowPadding"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"0"})}),(0,r.jsx)(n.td,{children:"Padding between the arrow and the edges of the content"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"sticky"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"'partial' | 'always'"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"'partial'"})}),(0,r.jsx)(n.td,{children:"Behavior when content hits the boundary edges"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"hideWhenDetached"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"Whether to hide content when it's trigger is fully obscured"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"className"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"Additional CSS classes to apply to the content"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"All HTML div attributes"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"HTMLAttributes<HTMLDivElement>"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"Supports all HTML div attributes"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"typescript",children:"TypeScript"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// Popover Component Types\nimport * as PopoverPrimitive from '@radix-ui/react-popover';\nimport React from 'react';\n\n// Main Popover\ntype PopoverProps = React.ComponentProps<typeof PopoverPrimitive.Root>;\n\n// PopoverTrigger\ntype PopoverTriggerProps = React.ComponentProps<typeof PopoverPrimitive.Trigger>;\n\n// PopoverContent\ntype PopoverContentProps = React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content> & {\n  className?: string;\n  align?: 'start' | 'center' | 'end';\n  sideOffset?: number;\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"customization",children:"Customization"}),"\n",(0,r.jsx)(n.h3,{id:"style-overrides",children:"Style Overrides"}),"\n",(0,r.jsx)(n.p,{children:"The Popover component can be customized in the following ways:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Using the ",(0,r.jsx)(n.code,{children:"className"})," prop on the PopoverContent component to add additional Tailwind classes"]}),"\n",(0,r.jsx)(n.li,{children:"Modifying the component's base styles in your project's CSS"}),"\n",(0,r.jsxs)(n.li,{children:["Customizing the Popover through the Tailwind theme in your ",(0,r.jsx)(n.code,{children:"tailwind.config.js"})," file"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'<PopoverContent className="w-96 bg-blue-50 p-6 border-blue-200">\n  Custom styled content here\n</PopoverContent>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"extending-the-component",children:"Extending the Component"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Button } from '@/components/ui/button';\n\nexport function ColorPickerPopover({ onColorSelect, ...props }) {\n  const colors = ['#FF0000', '#00FF00', '#0000FF', '#FFFF00', '#FF00FF'];\n  \n  return (\n    <Popover {...props}>\n      <PopoverTrigger asChild>\n        <Button variant=\"outline\">Select Color</Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-64 p-2\">\n        <div className=\"grid grid-cols-5 gap-2\">\n          {colors.map((color) => (\n            <button\n              key={color}\n              className=\"h-8 w-8 rounded-md border\"\n              style={{ backgroundColor: color }}\n              onClick={() => onColorSelect(color)}\n            />\n          ))}\n        </div>\n      </PopoverContent>\n    </Popover>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.h3,{id:"integration-with-react-hook-form",children:"Integration with React Hook Form"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'import { useForm } from \'react-hook-form\';\nimport { Button } from \'@/components/ui/button\';\nimport { Input } from \'@/components/ui/input\';\nimport { Label } from \'@/components/ui/label\';\nimport { Popover, PopoverContent, PopoverTrigger } from \'@/components/ui/popover\';\n\nfunction FilterForm() {\n  const { register, handleSubmit } = useForm({\n    defaultValues: {\n      name: \'\',\n      price: \'\',\n    }\n  });\n  \n  const onSubmit = (data) => {\n    console.log(data);\n  };\n  \n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button variant="outline">Filters</Button>\n      </PopoverTrigger>\n      <PopoverContent className="w-80">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className="grid gap-4">\n            <div className="space-y-2">\n              <h4 className="font-medium leading-none">Filters</h4>\n            </div>\n            <div className="grid gap-2">\n              <div className="grid gap-1">\n                <Label htmlFor="name">Name</Label>\n                <Input id="name" {...register(\'name\')} />\n              </div>\n              <div className="grid gap-1">\n                <Label htmlFor="price">Price</Label>\n                <Input id="price" type="number" {...register(\'price\')} />\n              </div>\n            </div>\n            <Button type="submit">Apply Filters</Button>\n          </div>\n        </form>\n      </PopoverContent>\n    </Popover>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"integration-with-other-components",children:"Integration with Other Components"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'import { Card, CardContent, CardHeader, CardTitle } from \'@/components/ui/card\';\nimport { Popover, PopoverContent, PopoverTrigger } from \'@/components/ui/popover\';\nimport { Button } from \'@/components/ui/button\';\nimport { HelpCircle } from \'lucide-react\';\n\nfunction DashboardCard() {\n  return (\n    <Card>\n      <CardHeader className="flex flex-row items-center justify-between">\n        <CardTitle>Monthly Revenue</CardTitle>\n        <Popover>\n          <PopoverTrigger asChild>\n            <Button variant="ghost" size="icon">\n              <HelpCircle className="h-4 w-4" />\n            </Button>\n          </PopoverTrigger>\n          <PopoverContent className="w-80">\n            <div className="space-y-2">\n              <h4 className="font-medium leading-none">About this chart</h4>\n              <p className="text-sm text-muted-foreground">\n                This chart shows the monthly revenue for the current year. \n                The data is updated at the beginning of each month.\n              </p>\n            </div>\n          </PopoverContent>\n        </Popover>\n      </CardHeader>\n      <CardContent>\n        {/* Chart content */}\n      </CardContent>\n    </Card>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"responsive-behavior",children:"Responsive Behavior"}),"\n",(0,r.jsx)(n.p,{children:"The Popover component responds to different screen sizes in the following ways:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mobile"}),": On mobile devices, the popover content has a smaller width by default, with the content adjusting to fit available space."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tablet"}),": Width expands to accommodate the content better, but still maintains constraints."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Desktop"}),": Full width as defined (default: 18rem/w-72), with positioning relative to the trigger."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Responsive customization example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'<PopoverContent className="w-[280px] md:w-[350px] lg:w-[450px]">\n  {/* Content that adapts to screen size */}\n</PopoverContent>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"accessibility",children:"Accessibility"}),"\n",(0,r.jsx)(n.p,{children:"The Popover component follows these accessibility best practices:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Uses the WAI-ARIA design pattern for popovers and tooltips"}),"\n",(0,r.jsx)(n.li,{children:"Manages focus correctly, trapping it inside the popover when open"}),"\n",(0,r.jsx)(n.li,{children:"Supports keyboard navigation with Tab key for internal elements"}),"\n",(0,r.jsx)(n.li,{children:"Uses proper ARIA attributes for describing relationships and states"}),"\n",(0,r.jsx)(n.li,{children:"Close the popover when the Escape key is pressed"}),"\n",(0,r.jsx)(n.li,{children:"Properly announces state changes to screen readers"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,r.jsx)(n.p,{children:"The component:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Is built on top of Radix UI's Popover primitive component"}),"\n",(0,r.jsx)(n.li,{children:"Uses React's forwardRef to properly forward refs to the underlying DOM elements"}),"\n",(0,r.jsx)(n.li,{children:"Implements a Portal to render the popover content outside the DOM hierarchy for proper z-index stacking"}),"\n",(0,r.jsx)(n.li,{children:"Uses animations for smooth opening and closing transitions"}),"\n",(0,r.jsx)(n.li,{children:"Adopts Tailwind's animation classes for consistent animation behaviors"}),"\n",(0,r.jsx)(n.li,{children:"Uses CSS custom properties for positioning through Radix's transform origin"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"common-pitfalls",children:"Common Pitfalls"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"State Management Issues"}),": When using controlled mode with ",(0,r.jsx)(n.code,{children:"open"})," and ",(0,r.jsx)(n.code,{children:"onOpenChange"}),", ensure you correctly update the state or the popover may behave unexpectedly."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Z-index Conflicts"}),": The popover has a z-index of 50 by default, which may need adjustment if used inside other components with higher z-index values."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Overflowing Content"}),": The popover has a fixed width by default (18rem/w-72). For wider content, specify a custom width className."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Modal Behavior"}),": When using ",(0,r.jsx)(n.code,{children:"modal={true}"}),", be aware that it prevents interaction with the rest of the application, which might not be desired in all cases."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Positioning in Scrolling Containers"}),": If the trigger is inside a scrolling container, the popover may not position correctly. Use portals appropriately."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// Example test for the Popover component\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport { Popover, PopoverTrigger, PopoverContent } from '@/components/ui/popover';\n\ndescribe('Popover', () => {\n  it('renders the trigger and shows content when clicked', async () => {\n    render(\n      <Popover>\n        <PopoverTrigger>Open Popover</PopoverTrigger>\n        <PopoverContent>Popover Content</PopoverContent>\n      </Popover>\n    );\n    \n    expect(screen.getByText('Open Popover')).toBeInTheDocument();\n    \n    // Content should not be visible initially\n    expect(screen.queryByText('Popover Content')).not.toBeInTheDocument();\n    \n    // Click the trigger\n    await userEvent.click(screen.getByText('Open Popover'));\n    \n    // Content should now be visible\n    expect(screen.getByText('Popover Content')).toBeInTheDocument();\n    \n    // Click outside should close the popover\n    await userEvent.click(document.body);\n    \n    // Content should not be visible again\n    expect(screen.queryByText('Popover Content')).not.toBeInTheDocument();\n  });\n\n  it('supports controlled mode', async () => {\n    const TestComponent = () => {\n      const [open, setOpen] = React.useState(false);\n      return (\n        <Popover open={open} onOpenChange={setOpen}>\n          <PopoverTrigger>Toggle</PopoverTrigger>\n          <PopoverContent>Controlled Content</PopoverContent>\n        </Popover>\n      );\n    };\n    \n    render(<TestComponent />);\n    \n    // Content should not be visible initially\n    expect(screen.queryByText('Controlled Content')).not.toBeInTheDocument();\n    \n    // Click the trigger\n    await userEvent.click(screen.getByText('Toggle'));\n    \n    // Content should now be visible\n    expect(screen.getByText('Controlled Content')).toBeInTheDocument();\n  });\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"related-components",children:"Related Components"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/nextjs-ts-tailwind-supabase-starter/components/ui/dialog",children:"Dialog"}),": Similar to Popover but designed for more complex modal interactions that require user attention."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://ui.shadcn.com/docs/components/tooltip",children:"Tooltip"}),": Used for simple text hints, with hover/focus activation rather than click."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/nextjs-ts-tailwind-supabase-starter/components/ui/dropdown-menu",children:"DropdownMenu"}),": Used for creating dropdown menus with multiple options."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://ui.shadcn.com/docs/components/hover-card",children:"HoverCard"}),": Similar to Popover but activated on hover instead of click."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var o=t(6540);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);