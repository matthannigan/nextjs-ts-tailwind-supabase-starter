"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[3668],{1557:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"components/ui/search-input","title":"SearchInput Component","description":"A compound component that combines an input field with a search icon and an optional search button for performing search operations in a form-like interface.","source":"@site/docs/components/ui/search-input.md","sourceDirName":"components/ui","slug":"/components/ui/search-input","permalink":"/nextjs-ts-tailwind-supabase-starter/components/ui/search-input","draft":false,"unlisted":false,"editUrl":"https://github.com/matthannigan/nextjs-ts-tailwind-supabase-starter/tree/main/docs-website/docs/components/ui/search-input.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Search Input"},"sidebar":"components","previous":{"title":"Popover","permalink":"/nextjs-ts-tailwind-supabase-starter/components/ui/popover"},"next":{"title":"Table","permalink":"/nextjs-ts-tailwind-supabase-starter/components/ui/table"}}');var i=t(4848),r=t(8453);const o={sidebar_label:"Search Input"},c="SearchInput Component",a={},l=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Without Button",id:"without-button",level:3},{value:"Custom Placeholder and Button Text",id:"custom-placeholder-and-button-text",level:3},{value:"With Custom Styling",id:"with-custom-styling",level:3},{value:"Props",id:"props",level:2},{value:"TypeScript",id:"typescript",level:2},{value:"Customization",id:"customization",level:2},{value:"Style Overrides",id:"style-overrides",level:3},{value:"Extending the Component",id:"extending-the-component",level:3},{value:"Examples",id:"examples",level:2},{value:"Integration with React Hook Form",id:"integration-with-react-hook-form",level:3},{value:"Integration with Other Components",id:"integration-with-other-components",level:3},{value:"Responsive Behavior",id:"responsive-behavior",level:3},{value:"Accessibility",id:"accessibility",level:2},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Common Pitfalls",id:"common-pitfalls",level:2},{value:"Testing",id:"testing",level:2},{value:"Related Components",id:"related-components",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"searchinput-component",children:"SearchInput Component"})}),"\n",(0,i.jsx)(n.p,{children:"A compound component that combines an input field with a search icon and an optional search button for performing search operations in a form-like interface."}),"\n",(0,i.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { SearchInput } from '@/components/ui/search-input';\n"})}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"<SearchInput onSearch={(value) => console.log(`Searching for: ${value}`)} />\n"})}),"\n",(0,i.jsx)(n.h3,{id:"without-button",children:"Without Button"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"<SearchInput \n  onSearch={(value) => console.log(`Searching for: ${value}`)} \n  showButton={false} \n/>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"custom-placeholder-and-button-text",children:"Custom Placeholder and Button Text"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'<SearchInput \n  placeholder="Find products..." \n  buttonText="Find"\n  onSearch={(value) => console.log(`Finding products: ${value}`)} \n/>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"with-custom-styling",children:"With Custom Styling"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'<SearchInput \n  className="max-w-md bg-slate-50 p-2 rounded-lg"\n  onSearch={(value) => console.log(`Searching for: ${value}`)} \n/>\n'})}),"\n",(0,i.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Prop"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"onSearch"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"(value: string) => void"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"Function called when the search form is submitted"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"placeholder"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'Search...'"})}),(0,i.jsx)(n.td,{children:"Placeholder text for the search input"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"className"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"Additional CSS classes to apply to the form container"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"buttonText"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'Search'"})}),(0,i.jsx)(n.td,{children:"Text to display on the search button"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"showButton"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"true"})}),(0,i.jsx)(n.td,{children:"Whether to show the search button"})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["Additionally, the component accepts all standard form HTML attributes since it extends ",(0,i.jsx)(n.code,{children:"HTMLAttributes<HTMLFormElement>"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"typescript",children:"TypeScript"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"interface SearchInputProps extends HTMLAttributes<HTMLFormElement> {\n  onSearch?: (value: string) => void;\n  placeholder?: string;\n  className?: string;\n  buttonText?: string;\n  showButton?: boolean;\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"customization",children:"Customization"}),"\n",(0,i.jsx)(n.h3,{id:"style-overrides",children:"Style Overrides"}),"\n",(0,i.jsx)(n.p,{children:"The component can be customized using the following approaches:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Using the ",(0,i.jsx)(n.code,{children:"className"})," prop to add additional Tailwind classes to the form container"]}),"\n",(0,i.jsxs)(n.li,{children:["Customizing the appearance of the button by modifying the ",(0,i.jsx)(n.code,{children:"button.tsx"})," component"]}),"\n",(0,i.jsxs)(n.li,{children:["Customizing the appearance of the input by modifying the ",(0,i.jsx)(n.code,{children:"input.tsx"})," component"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"extending-the-component",children:"Extending the Component"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import { SearchInput } from \'@/components/ui/search-input\';\n\nexport function CustomSearchInput({ withIcon = true, ...props }) {\n  return (\n    <div className="my-custom-container">\n      <h4 className="text-sm font-medium mb-2">Search</h4>\n      <SearchInput \n        {...props} \n        className={`bg-gray-50 ${props.className || \'\'}`}\n      />\n      {withIcon && (\n        <div className="mt-2 text-xs text-gray-500">\n          Click the search button or press Enter to search\n        </div>\n      )}\n    </div>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.h3,{id:"integration-with-react-hook-form",children:"Integration with React Hook Form"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import { useForm } from \'react-hook-form\';\nimport { SearchInput } from \'@/components/ui/search-input\';\n\nexport function SearchForm() {\n  const { handleSubmit } = useForm();\n  \n  const onSubmit = (data) => {\n    console.log(\'Form submitted:\', data);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className="space-y-4">\n      <div>\n        <label htmlFor="searchField" className="text-sm font-medium">\n          Search Products\n        </label>\n        <SearchInput \n          id="searchField"\n          onSearch={(value) => console.log(`Searching for: ${value}`)}\n          showButton={false}\n        />\n      </div>\n      <button type="submit" className="w-full">Submit Form</button>\n    </form>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"integration-with-other-components",children:"Integration with Other Components"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { SearchInput } from '@/components/ui/search-input';\n\nexport function SearchCard() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Product Search</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <SearchInput \n          onSearch={(value) => console.log(`Searching for: ${value}`)}\n          placeholder=\"Find products by name...\"\n        />\n      </CardContent>\n    </Card>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"responsive-behavior",children:"Responsive Behavior"}),"\n",(0,i.jsx)(n.p,{children:"The SearchInput component automatically adapts to different screen sizes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Mobile"}),": The input field takes up the full width, and the button (if shown) is attached to the right side."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Tablet/Desktop"}),": Maintains the same layout but benefits from larger screen space."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The component uses responsive text size with ",(0,i.jsx)(n.code,{children:"text-base"})," on mobile and ",(0,i.jsx)(n.code,{children:"text-sm"})," on medium screens and above, as inherited from the Input component."]}),"\n",(0,i.jsx)(n.h2,{id:"accessibility",children:"Accessibility"}),"\n",(0,i.jsx)(n.p,{children:"The component follows these accessibility best practices:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Uses semantic HTML with proper form elements"}),"\n",(0,i.jsx)(n.li,{children:"Input has a proper placeholder"}),"\n",(0,i.jsx)(n.li,{children:"Button has a descriptive label"}),"\n",(0,i.jsx)(n.li,{children:"Focus states are visible via the input's focus styles"}),"\n",(0,i.jsx)(n.li,{children:"Form submission can be triggered by pressing Enter"}),"\n",(0,i.jsx)(n.li,{children:"Search icon provides visual indication of the input's purpose"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,i.jsx)(n.p,{children:"The component:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Uses the Lucide ",(0,i.jsx)(n.code,{children:"Search"})," icon for visual indication"]}),"\n",(0,i.jsx)(n.li,{children:"Maintains internal state for the input value"}),"\n",(0,i.jsxs)(n.li,{children:["Combines shadcn/ui's ",(0,i.jsx)(n.code,{children:"Input"})," and ",(0,i.jsx)(n.code,{children:"Button"})," components"]}),"\n",(0,i.jsx)(n.li,{children:"Provides a form element that handles the submission event"}),"\n",(0,i.jsx)(n.li,{children:"Uses a ref to potentially focus the input (though this functionality is not currently used in the implementation)"}),"\n",(0,i.jsx)(n.li,{children:"Properly handles form submission to prevent page reload"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"common-pitfalls",children:"Common Pitfalls"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Not Handling the onSearch Callback"}),": Make sure to implement the ",(0,i.jsx)(n.code,{children:"onSearch"})," prop to process the search value when the form is submitted."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CSS Conflicts with Parent Containers"}),": The component uses ",(0,i.jsx)(n.code,{children:"w-full"})," for the input, so ensure parent containers appropriately constrain the width if needed."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Button Style Conflicts"}),": If you're customizing button styles globally, be aware this might affect the search button's appearance."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Using with Form Libraries"}),": When using inside react-hook-form, you may need to handle the form submission differently, as the component manages its own input state."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { render, screen, fireEvent } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport { SearchInput } from '@/components/ui/search-input';\n\ndescribe('SearchInput', () => {\n  it('renders correctly with default props', () => {\n    render(<SearchInput />);\n    expect(screen.getByPlaceholderText('Search...')).toBeInTheDocument();\n    expect(screen.getByRole('button', { name: 'Search' })).toBeInTheDocument();\n  });\n  \n  it('calls onSearch when the form is submitted', async () => {\n    const handleSearch = jest.fn();\n    render(<SearchInput onSearch={handleSearch} />);\n    \n    const input = screen.getByPlaceholderText('Search...');\n    await userEvent.type(input, 'test query');\n    \n    const button = screen.getByRole('button', { name: 'Search' });\n    await userEvent.click(button);\n    \n    expect(handleSearch).toHaveBeenCalledWith('test query');\n  });\n  \n  it('renders without button when showButton is false', () => {\n    render(<SearchInput showButton={false} />);\n    expect(screen.queryByRole('button')).not.toBeInTheDocument();\n  });\n  \n  it('uses custom placeholder and button text', () => {\n    render(<SearchInput placeholder=\"Find items...\" buttonText=\"Find\" />);\n    expect(screen.getByPlaceholderText('Find items...')).toBeInTheDocument();\n    expect(screen.getByRole('button', { name: 'Find' })).toBeInTheDocument();\n  });\n  \n  it('submits on pressing Enter', async () => {\n    const handleSearch = jest.fn();\n    render(<SearchInput onSearch={handleSearch} />);\n    \n    const input = screen.getByPlaceholderText('Search...');\n    await userEvent.type(input, 'test query{enter}');\n    \n    expect(handleSearch).toHaveBeenCalledWith('test query');\n  });\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"related-components",children:"Related Components"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/nextjs-ts-tailwind-supabase-starter/components/forms/input",children:"Input"}),": The base input component used within SearchInput."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/nextjs-ts-tailwind-supabase-starter/components/ui/button",children:"Button"}),": The button component used for the search action."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/nextjs-ts-tailwind-supabase-starter/components/forms/form",children:"Form"}),": For more complex form handling that might incorporate the SearchInput."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var s=t(6540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);