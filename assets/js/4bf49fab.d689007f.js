"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[4411],{6211:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>a,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"components/ui/dropdown-menu","title":"DropdownMenu Component","description":"A flexible dropdown menu component that displays a list of options, actions, or functions triggered by a button, with support for nested submenus, checkboxes, radio groups, and keyboard navigation.","source":"@site/docs/components/ui/dropdown-menu.md","sourceDirName":"components/ui","slug":"/components/ui/dropdown-menu","permalink":"/nextjs-ts-tailwind-supabase-starter/components/ui/dropdown-menu","draft":false,"unlisted":false,"editUrl":"https://github.com/matthannigan/nextjs-ts-tailwind-supabase-starter/tree/main/docs-website/docs/components/ui/dropdown-menu.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Dropdown Menu"},"sidebar":"components","previous":{"title":"Dialog","permalink":"/nextjs-ts-tailwind-supabase-starter/components/ui/dialog"},"next":{"title":"Popover","permalink":"/nextjs-ts-tailwind-supabase-starter/components/ui/popover"}}');var t=o(4848),d=o(8453);const s={sidebar_label:"Dropdown Menu"},i="DropdownMenu Component",l={},c=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"With Icons and Shortcuts",id:"with-icons-and-shortcuts",level:3},{value:"With Checkbox Items",id:"with-checkbox-items",level:3},{value:"With Radio Items",id:"with-radio-items",level:3},{value:"With Nested Submenus",id:"with-nested-submenus",level:3},{value:"Props",id:"props",level:2},{value:"DropdownMenu Props",id:"dropdownmenu-props",level:3},{value:"DropdownMenuTrigger Props",id:"dropdownmenutrigger-props",level:3},{value:"DropdownMenuContent Props",id:"dropdownmenucontent-props",level:3},{value:"DropdownMenuItem Props",id:"dropdownmenuitem-props",level:3},{value:"DropdownMenuCheckboxItem Props",id:"dropdownmenucheckboxitem-props",level:3},{value:"DropdownMenuRadioItem Props",id:"dropdownmenuradioitem-props",level:3},{value:"DropdownMenuRadioGroup Props",id:"dropdownmenuradiogroup-props",level:3},{value:"DropdownMenuLabel Props",id:"dropdownmenulabel-props",level:3},{value:"DropdownMenuSeparator Props",id:"dropdownmenuseparator-props",level:3},{value:"DropdownMenuShortcut Props",id:"dropdownmenushortcut-props",level:3},{value:"TypeScript",id:"typescript",level:2},{value:"Customization",id:"customization",level:2},{value:"Style Overrides",id:"style-overrides",level:3},{value:"Extending the Component",id:"extending-the-component",level:3},{value:"Examples",id:"examples",level:2},{value:"Integration with Forms",id:"integration-with-forms",level:3},{value:"Integration with Other Components",id:"integration-with-other-components",level:3},{value:"Responsive Behavior",id:"responsive-behavior",level:3},{value:"Accessibility",id:"accessibility",level:2},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Common Pitfalls",id:"common-pitfalls",level:2},{value:"Testing",id:"testing",level:2},{value:"Related Components",id:"related-components",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"dropdownmenu-component",children:"DropdownMenu Component"})}),"\n",(0,t.jsx)(n.p,{children:"A flexible dropdown menu component that displays a list of options, actions, or functions triggered by a button, with support for nested submenus, checkboxes, radio groups, and keyboard navigation."}),"\n",(0,t.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup\n} from '@/components/ui/dropdown-menu';\n"})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"<DropdownMenu>\n  <DropdownMenuTrigger>Open Menu</DropdownMenuTrigger>\n  <DropdownMenuContent>\n    <DropdownMenuLabel>My Account</DropdownMenuLabel>\n    <DropdownMenuSeparator />\n    <DropdownMenuItem>Profile</DropdownMenuItem>\n    <DropdownMenuItem>Settings</DropdownMenuItem>\n    <DropdownMenuItem>Logout</DropdownMenuItem>\n  </DropdownMenuContent>\n</DropdownMenu>\n"})}),"\n",(0,t.jsx)(n.h3,{id:"with-icons-and-shortcuts",children:"With Icons and Shortcuts"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'import { UserIcon, SettingsIcon, LogOutIcon } from \'lucide-react\';\n\n<DropdownMenu>\n  <DropdownMenuTrigger>Options</DropdownMenuTrigger>\n  <DropdownMenuContent>\n    <DropdownMenuLabel>Actions</DropdownMenuLabel>\n    <DropdownMenuSeparator />\n    <DropdownMenuItem>\n      <UserIcon className="mr-2 h-4 w-4" />\n      Profile\n      <DropdownMenuShortcut>\u21e7\u2318P</DropdownMenuShortcut>\n    </DropdownMenuItem>\n    <DropdownMenuItem>\n      <SettingsIcon className="mr-2 h-4 w-4" />\n      Settings\n      <DropdownMenuShortcut>\u2318S</DropdownMenuShortcut>\n    </DropdownMenuItem>\n    <DropdownMenuSeparator />\n    <DropdownMenuItem>\n      <LogOutIcon className="mr-2 h-4 w-4" />\n      Logout\n      <DropdownMenuShortcut>\u21e7\u2318Q</DropdownMenuShortcut>\n    </DropdownMenuItem>\n  </DropdownMenuContent>\n</DropdownMenu>\n'})}),"\n",(0,t.jsx)(n.h3,{id:"with-checkbox-items",children:"With Checkbox Items"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { useState } from 'react';\n\nexport function CheckboxDropdown() {\n  const [showStatusBar, setShowStatusBar] = useState(true);\n  const [showActivityBar, setShowActivityBar] = useState(false);\n  const [showPanel, setShowPanel] = useState(false);\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger>View Options</DropdownMenuTrigger>\n      <DropdownMenuContent className=\"w-56\">\n        <DropdownMenuLabel>Appearance</DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        <DropdownMenuCheckboxItem\n          checked={showStatusBar}\n          onCheckedChange={setShowStatusBar}\n        >\n          Status Bar\n        </DropdownMenuCheckboxItem>\n        <DropdownMenuCheckboxItem\n          checked={showActivityBar}\n          onCheckedChange={setShowActivityBar}\n        >\n          Activity Bar\n        </DropdownMenuCheckboxItem>\n        <DropdownMenuCheckboxItem\n          checked={showPanel}\n          onCheckedChange={setShowPanel}\n        >\n          Panel\n        </DropdownMenuCheckboxItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"with-radio-items",children:"With Radio Items"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'import { useState } from \'react\';\n\nexport function RadioDropdown() {\n  const [position, setPosition] = useState("bottom");\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger>Panel Position</DropdownMenuTrigger>\n      <DropdownMenuContent className="w-56">\n        <DropdownMenuLabel>Panel Position</DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        <DropdownMenuRadioGroup value={position} onValueChange={setPosition}>\n          <DropdownMenuRadioItem value="top">Top</DropdownMenuRadioItem>\n          <DropdownMenuRadioItem value="right">Right</DropdownMenuRadioItem>\n          <DropdownMenuRadioItem value="bottom">Bottom</DropdownMenuRadioItem>\n          <DropdownMenuRadioItem value="left">Left</DropdownMenuRadioItem>\n        </DropdownMenuRadioGroup>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"with-nested-submenus",children:"With Nested Submenus"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"<DropdownMenu>\n  <DropdownMenuTrigger>Open Menu</DropdownMenuTrigger>\n  <DropdownMenuContent>\n    <DropdownMenuLabel>Actions</DropdownMenuLabel>\n    <DropdownMenuItem>Direct Action</DropdownMenuItem>\n    <DropdownMenuSub>\n      <DropdownMenuSubTrigger>More Options</DropdownMenuSubTrigger>\n      <DropdownMenuSubContent>\n        <DropdownMenuItem>Sub Item 1</DropdownMenuItem>\n        <DropdownMenuItem>Sub Item 2</DropdownMenuItem>\n        <DropdownMenuSub>\n          <DropdownMenuSubTrigger>More Nested Options</DropdownMenuSubTrigger>\n          <DropdownMenuSubContent>\n            <DropdownMenuItem>Deep Nested Item 1</DropdownMenuItem>\n            <DropdownMenuItem>Deep Nested Item 2</DropdownMenuItem>\n          </DropdownMenuSubContent>\n        </DropdownMenuSub>\n      </DropdownMenuSubContent>\n    </DropdownMenuSub>\n  </DropdownMenuContent>\n</DropdownMenu>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,t.jsx)(n.h3,{id:"dropdownmenu-props",children:"DropdownMenu Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"defaultOpen"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"false"})}),(0,t.jsx)(n.td,{children:"Default open state when uncontrolled"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"open"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Open state when controlled"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"onOpenChange"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"(open: boolean) => void"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Callback when open state changes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"modal"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"true"})}),(0,t.jsx)(n.td,{children:"Whether the dropdown is modal (blocks interaction outside)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"children"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ReactNode"})}),(0,t.jsx)(n.td,{children:"Required"}),(0,t.jsx)(n.td,{children:"The content of the dropdown menu (trigger and content)"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"dropdownmenutrigger-props",children:"DropdownMenuTrigger Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"asChild"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"false"})}),(0,t.jsx)(n.td,{children:"When true, will use child as trigger instead of a button"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"className"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Additional CSS classes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"children"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ReactNode"})}),(0,t.jsx)(n.td,{children:"Required"}),(0,t.jsx)(n.td,{children:"The content of the trigger element"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"dropdownmenucontent-props",children:"DropdownMenuContent Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"className"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Additional CSS classes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"sideOffset"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"4"})}),(0,t.jsx)(n.td,{children:"Offset from the trigger in pixels"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"align"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"'start' | 'center' | 'end'"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"'center'"})}),(0,t.jsx)(n.td,{children:"Preferred alignment of the content"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"children"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ReactNode"})}),(0,t.jsx)(n.td,{children:"Required"}),(0,t.jsx)(n.td,{children:"The content of the dropdown menu"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"...props"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"DropdownMenuContentProps"})}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"All other properties passed to the Radix UI content component"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"dropdownmenuitem-props",children:"DropdownMenuItem Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"className"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Additional CSS classes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"inset"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"false"})}),(0,t.jsx)(n.td,{children:"Indents the item to align with checkbox/radio items"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"disabled"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"false"})}),(0,t.jsx)(n.td,{children:"Whether the item is disabled"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"onSelect"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"(event: Event) => void"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Callback when the item is selected"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"children"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ReactNode"})}),(0,t.jsx)(n.td,{children:"Required"}),(0,t.jsx)(n.td,{children:"The content of the menu item"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"...props"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"DropdownMenuItemProps"})}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"All other properties passed to the Radix UI item component"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"dropdownmenucheckboxitem-props",children:"DropdownMenuCheckboxItem Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"className"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Additional CSS classes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"checked"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"false"})}),(0,t.jsx)(n.td,{children:"Whether the checkbox is checked"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"onCheckedChange"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"(checked: boolean) => void"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Callback when checked state changes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"disabled"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"false"})}),(0,t.jsx)(n.td,{children:"Whether the item is disabled"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"children"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ReactNode"})}),(0,t.jsx)(n.td,{children:"Required"}),(0,t.jsx)(n.td,{children:"The content of the checkbox item"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"...props"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"DropdownMenuCheckboxItemProps"})}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"All other properties passed to the Radix UI checkbox item component"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"dropdownmenuradioitem-props",children:"DropdownMenuRadioItem Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"className"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Additional CSS classes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"value"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"Required"}),(0,t.jsx)(n.td,{children:"Value of this radio item"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"disabled"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"false"})}),(0,t.jsx)(n.td,{children:"Whether the item is disabled"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"children"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ReactNode"})}),(0,t.jsx)(n.td,{children:"Required"}),(0,t.jsx)(n.td,{children:"The content of the radio item"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"...props"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"DropdownMenuRadioItemProps"})}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"All other properties passed to the Radix UI radio item component"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"dropdownmenuradiogroup-props",children:"DropdownMenuRadioGroup Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"value"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Current value of the radio group"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"onValueChange"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"(value: string) => void"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Callback when value changes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"children"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ReactNode"})}),(0,t.jsx)(n.td,{children:"Required"}),(0,t.jsx)(n.td,{children:"The radio items"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"dropdownmenulabel-props",children:"DropdownMenuLabel Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"className"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Additional CSS classes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"inset"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"false"})}),(0,t.jsx)(n.td,{children:"Indents the label to align with checkbox/radio items"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"children"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ReactNode"})}),(0,t.jsx)(n.td,{children:"Required"}),(0,t.jsx)(n.td,{children:"The content of the label"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"...props"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"DropdownMenuLabelProps"})}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"All other properties passed to the Radix UI label component"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"dropdownmenuseparator-props",children:"DropdownMenuSeparator Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"className"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Additional CSS classes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"...props"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"DropdownMenuSeparatorProps"})}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"All other properties passed to the Radix UI separator component"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"dropdownmenushortcut-props",children:"DropdownMenuShortcut Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"className"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Additional CSS classes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"children"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ReactNode"})}),(0,t.jsx)(n.td,{children:"Required"}),(0,t.jsx)(n.td,{children:'The shortcut text (e.g., "\u2318S")'})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"...props"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"HTMLAttributes<HTMLSpanElement>"})}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"All other properties passed to the underlying span element"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"typescript",children:"TypeScript"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import * as React from 'react';\nimport * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu';\n\n// Basic DropdownMenu props\ntype DropdownMenuProps = React.ComponentProps<typeof DropdownMenuPrimitive.Root>;\n\n// DropdownMenuTrigger props\ntype DropdownMenuTriggerProps = React.ComponentProps<typeof DropdownMenuPrimitive.Trigger>;\n\n// DropdownMenuContent props\ntype DropdownMenuContentProps = React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>;\n\n// DropdownMenuItem props with optional inset property\ntype DropdownMenuItemProps = React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n  inset?: boolean;\n};\n\n// DropdownMenuCheckboxItem props\ntype DropdownMenuCheckboxItemProps = React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>;\n\n// DropdownMenuRadioItem props\ntype DropdownMenuRadioItemProps = React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>;\n\n// DropdownMenuRadioGroup props\ntype DropdownMenuRadioGroupProps = React.ComponentProps<typeof DropdownMenuPrimitive.RadioGroup>;\n\n// DropdownMenuLabel props with optional inset property\ntype DropdownMenuLabelProps = React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n  inset?: boolean;\n};\n\n// DropdownMenuSeparator props\ntype DropdownMenuSeparatorProps = React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>;\n\n// DropdownMenuShortcut props (custom component)\ntype DropdownMenuShortcutProps = React.HTMLAttributes<HTMLSpanElement>;\n\n// DropdownMenuSubTrigger props with optional inset property\ntype DropdownMenuSubTriggerProps = React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n  inset?: boolean;\n};\n\n// DropdownMenuSubContent props\ntype DropdownMenuSubContentProps = React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>;\n"})}),"\n",(0,t.jsx)(n.h2,{id:"customization",children:"Customization"}),"\n",(0,t.jsx)(n.h3,{id:"style-overrides",children:"Style Overrides"}),"\n",(0,t.jsx)(n.p,{children:"The DropdownMenu component can be customized using the following approaches:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Using the ",(0,t.jsx)(n.code,{children:"className"})," prop to add additional Tailwind classes to each sub-component:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'<DropdownMenu>\n  <DropdownMenuTrigger className="font-medium bg-primary text-primary-foreground hover:bg-primary/90 px-4 py-2 rounded-md">\n    Custom Trigger\n  </DropdownMenuTrigger>\n  <DropdownMenuContent className="w-64 bg-zinc-50 dark:bg-zinc-900 border-zinc-300 dark:border-zinc-700">\n    <DropdownMenuItem className="hover:bg-zinc-200 dark:hover:bg-zinc-800 cursor-pointer">\n      Custom Styled Item\n    </DropdownMenuItem>\n  </DropdownMenuContent>\n</DropdownMenu>\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Customizing the position and alignment:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'<DropdownMenu>\n  <DropdownMenuTrigger>Open Menu</DropdownMenuTrigger>\n  <DropdownMenuContent align="end" sideOffset={8} alignOffset={8}>\n    {/* Content aligned to the end with custom offsets */}\n    <DropdownMenuItem>Aligned to End</DropdownMenuItem>\n  </DropdownMenuContent>\n</DropdownMenu>\n'})}),"\n",(0,t.jsx)(n.h3,{id:"extending-the-component",children:"Extending the Component"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'import { Button } from \'@/components/ui/button\';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger\n} from \'@/components/ui/dropdown-menu\';\n\ninterface UserDropdownProps {\n  username: string;\n  userRole: string;\n  avatarUrl?: string;\n  onProfileClick: () => void;\n  onSettingsClick: () => void;\n  onLogoutClick: () => void;\n}\n\nexport function UserDropdown({\n  username,\n  userRole,\n  avatarUrl,\n  onProfileClick,\n  onSettingsClick,\n  onLogoutClick\n}: UserDropdownProps) {\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant="ghost" className="relative h-8 w-8 rounded-full">\n          {avatarUrl ? (\n            <img src={avatarUrl} alt={username} className="h-8 w-8 rounded-full" />\n          ) : (\n            <div className="flex h-8 w-8 items-center justify-center rounded-full bg-muted">\n              {username.charAt(0).toUpperCase()}\n            </div>\n          )}\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent className="w-56" align="end" forceMount>\n        <div className="flex flex-col space-y-1 p-2">\n          <p className="text-sm font-medium">{username}</p>\n          <p className="text-xs text-muted-foreground">{userRole}</p>\n        </div>\n        <DropdownMenuSeparator />\n        <DropdownMenuItem onClick={onProfileClick}>\n          Profile\n        </DropdownMenuItem>\n        <DropdownMenuItem onClick={onSettingsClick}>\n          Settings\n        </DropdownMenuItem>\n        <DropdownMenuSeparator />\n        <DropdownMenuItem \n          className="text-red-500 focus:bg-red-50 dark:focus:bg-red-950/50"\n          onClick={onLogoutClick}\n        >\n          Logout\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.h3,{id:"integration-with-forms",children:"Integration with Forms"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'import { zodResolver } from \'@hookform/resolvers/zod\';\nimport { useForm } from \'react-hook-form\';\nimport * as z from \'zod\';\nimport { Button } from \'@/components/ui/button\';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage\n} from \'@/components/ui/Form\';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuTrigger\n} from \'@/components/ui/dropdown-menu\';\n\nconst formSchema = z.object({\n  theme: z.enum([\'light\', \'dark\', \'system\'], {\n    required_error: "Please select a theme",\n  }),\n});\n\nexport function ThemeSelector() {\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      theme: \'system\',\n    },\n  });\n\n  function onSubmit(values: z.infer<typeof formSchema>) {\n    console.log(values);\n    // Apply theme logic\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-8">\n        <FormField\n          control={form.control}\n          name="theme"\n          render={({ field }) => (\n            <FormItem className="flex flex-col">\n              <FormLabel>Theme</FormLabel>\n              <FormControl>\n                <DropdownMenu>\n                  <DropdownMenuTrigger asChild>\n                    <Button variant="outline" className="w-full justify-between">\n                      {field.value.charAt(0).toUpperCase() + field.value.slice(1)}\n                      <span className="sr-only">Toggle theme menu</span>\n                    </Button>\n                  </DropdownMenuTrigger>\n                  <DropdownMenuContent className="w-full min-w-[200px]">\n                    <DropdownMenuRadioGroup\n                      value={field.value}\n                      onValueChange={field.onChange}\n                    >\n                      <DropdownMenuRadioItem value="light">Light</DropdownMenuRadioItem>\n                      <DropdownMenuRadioItem value="dark">Dark</DropdownMenuRadioItem>\n                      <DropdownMenuRadioItem value="system">System</DropdownMenuRadioItem>\n                    </DropdownMenuRadioGroup>\n                  </DropdownMenuContent>\n                </DropdownMenu>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type="submit">Save preferences</Button>\n      </form>\n    </Form>\n  );\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"integration-with-other-components",children:"Integration with Other Components"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'import { Button } from \'@/components/ui/button\';\nimport { Card, CardContent, CardHeader, CardTitle } from \'@/components/ui/card\';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger\n} from \'@/components/ui/dropdown-menu\';\nimport { MoreHorizontal } from \'lucide-react\';\n\nexport function ProjectCard({ project }) {\n  return (\n    <Card>\n      <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">\n        <CardTitle className="text-sm font-medium">\n          {project.name}\n        </CardTitle>\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant="ghost" className="h-8 w-8 p-0">\n              <span className="sr-only">Open menu</span>\n              <MoreHorizontal className="h-4 w-4" />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align="end">\n            <DropdownMenuItem onClick={() => window.location.href = `/projects/${project.id}`}>\n              View\n            </DropdownMenuItem>\n            <DropdownMenuItem onClick={() => window.location.href = `/projects/${project.id}/edit`}>\n              Edit\n            </DropdownMenuItem>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem \n              className="text-red-500 focus:bg-red-50 dark:focus:bg-red-950/50"\n              onClick={() => alert(`Delete ${project.name}`)}\n            >\n              Delete\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </CardHeader>\n      <CardContent>\n        <p className="text-xs text-muted-foreground">{project.description}</p>\n        <div className="mt-4 text-2xl font-bold">{project.stats.value}</div>\n        <p className="text-xs text-muted-foreground">{project.stats.label}</p>\n      </CardContent>\n    </Card>\n  );\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"responsive-behavior",children:"Responsive Behavior"}),"\n",(0,t.jsx)(n.p,{children:"The DropdownMenu component adapts to different screen sizes automatically, but you can enhance its behavior on specific devices:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'<DropdownMenu>\n  <DropdownMenuTrigger className="hidden md:flex">\n    Desktop Menu\n  </DropdownMenuTrigger>\n  <DropdownMenuContent className="w-40 md:w-56 lg:w-64">\n    <DropdownMenuItem className="hidden md:flex">\n      Desktop-only Option\n    </DropdownMenuItem>\n    <DropdownMenuItem>\n      Responsive Option\n    </DropdownMenuItem>\n    <DropdownMenuSub>\n      <DropdownMenuSubTrigger>More Options</DropdownMenuSubTrigger>\n      <DropdownMenuSubContent className="w-32 md:w-48">\n        <DropdownMenuItem className="text-xs md:text-sm">\n          Responsive submenu option\n        </DropdownMenuItem>\n      </DropdownMenuSubContent>\n    </DropdownMenuSub>\n  </DropdownMenuContent>\n</DropdownMenu>\n'})}),"\n",(0,t.jsx)(n.p,{children:"The responsive behavior includes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Mobile"}),": Smaller width dropdown with appropriate text and spacing"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tablet"}),": Medium width dropdown with standard text size"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Desktop"}),": Full-featured dropdown with all options visible"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"accessibility",children:"Accessibility"}),"\n",(0,t.jsx)(n.p,{children:"The DropdownMenu component follows these accessibility best practices:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Uses the ",(0,t.jsx)(n.a,{href:"https://www.w3.org/WAI/ARIA/apg/patterns/menu-button/",children:"WAI-ARIA menu pattern"})," for proper accessibility"]}),"\n",(0,t.jsx)(n.li,{children:"Implements keyboard navigation for all menu items and submenus"}),"\n",(0,t.jsx)(n.li,{children:"Supports arrow key navigation (up/down to navigate, right to enter a submenu, left to close a submenu)"}),"\n",(0,t.jsx)(n.li,{children:"Allows escape key to close menus and submenus"}),"\n",(0,t.jsx)(n.li,{children:"Manages focus properly when opening and closing menus"}),"\n",(0,t.jsx)(n.li,{children:"Provides proper ARIA roles, states, and properties"}),"\n",(0,t.jsx)(n.li,{children:"Includes proper contrast ratios for all elements and states"}),"\n",(0,t.jsx)(n.li,{children:"Uses Radix UI's primitives which prioritize accessibility"}),"\n",(0,t.jsx)(n.li,{children:"Supports screen readers with proper labeling"}),"\n",(0,t.jsx)(n.li,{children:"Handles disabled states appropriately for menu items"}),"\n",(0,t.jsx)(n.li,{children:"Manages menu positioning based on available viewport space"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,t.jsx)(n.p,{children:"The component:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Is built on Radix UI's DropdownMenu primitive for robust accessibility"}),"\n",(0,t.jsx)(n.li,{children:"Uses portals to render menu content outside the DOM hierarchy to avoid clipping"}),"\n",(0,t.jsx)(n.li,{children:"Applies consistent styling with Tailwind CSS"}),"\n",(0,t.jsx)(n.li,{children:"Handles animations for opening/closing with proper transitions"}),"\n",(0,t.jsx)(n.li,{children:"Supports submenus with proper nesting and transitions"}),"\n",(0,t.jsx)(n.li,{children:"Includes specialized item types (checkbox, radio) with correct indicators"}),"\n",(0,t.jsx)(n.li,{children:"Supports controlled and uncontrolled usage patterns"}),"\n",(0,t.jsxs)(n.li,{children:["Uses the ",(0,t.jsx)(n.code,{children:"inset"})," prop to align items with different indentation needs"]}),"\n",(0,t.jsx)(n.li,{children:"Adds keyboard shortcut display support via the DropdownMenuShortcut component"}),"\n",(0,t.jsx)(n.li,{children:"Is configured for appropriate z-index layering to work well with other overlay components"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"common-pitfalls",children:"Common Pitfalls"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Event propagation"}),": Use ",(0,t.jsx)(n.code,{children:"onSelect={(e) => e.preventDefault()}"})," when you need to prevent menu closing on item click"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Form integration"}),": When using within forms, ensure proper state management to avoid form submission on menu item selection"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Controlled state"}),": When using controlled open state, ensure you handle state updates properly to avoid the dropdown being stuck"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Portal conflicts"}),": If using multiple dropdown menus or other portaled components close to each other, z-index conflicts might occur"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Responsive design"}),": Be cautious with very wide dropdown content on mobile screens, as it might extend beyond the viewport"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Nesting depth"}),": Avoid deeply nested submenus as they can create poor user experience, especially on mobile"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Animation performance"}),": Complex animations in dropdown menus can cause performance issues on lower-end devices"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Server components"}),": The DropdownMenu component uses client-side features and must be used within client components (note the 'use client' directive)"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// Example test for the DropdownMenu component\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem\n} from '@/components/ui/dropdown-menu';\n\ndescribe('DropdownMenu', () => {\n  it('opens the dropdown when trigger is clicked', async () => {\n    render(\n      <DropdownMenu>\n        <DropdownMenuTrigger>Open Menu</DropdownMenuTrigger>\n        <DropdownMenuContent>\n          <DropdownMenuItem>Item 1</DropdownMenuItem>\n          <DropdownMenuItem>Item 2</DropdownMenuItem>\n        </DropdownMenuContent>\n      </DropdownMenu>\n    );\n    \n    // Trigger is visible and menu is not initially\n    expect(screen.getByText('Open Menu')).toBeInTheDocument();\n    expect(screen.queryByText('Item 1')).not.toBeInTheDocument();\n    \n    // Click trigger to open menu\n    await userEvent.click(screen.getByText('Open Menu'));\n    \n    // Menu items should now be visible\n    await waitFor(() => {\n      expect(screen.getByText('Item 1')).toBeInTheDocument();\n      expect(screen.getByText('Item 2')).toBeInTheDocument();\n    });\n  });\n  \n  it('calls onSelect when menu item is clicked', async () => {\n    const handleSelect = jest.fn();\n    \n    render(\n      <DropdownMenu>\n        <DropdownMenuTrigger>Open Menu</DropdownMenuTrigger>\n        <DropdownMenuContent>\n          <DropdownMenuItem onSelect={handleSelect}>\n            Clickable Item\n          </DropdownMenuItem>\n        </DropdownMenuContent>\n      </DropdownMenu>\n    );\n    \n    // Open the menu\n    await userEvent.click(screen.getByText('Open Menu'));\n    \n    // Click the menu item\n    await waitFor(() => {\n      expect(screen.getByText('Clickable Item')).toBeInTheDocument();\n    });\n    await userEvent.click(screen.getByText('Clickable Item'));\n    \n    // Check if handler was called\n    expect(handleSelect).toHaveBeenCalledTimes(1);\n  });\n  \n  it('supports checkbox items with checked states', async () => {\n    const handleCheckedChange = jest.fn();\n    \n    function TestComponent() {\n      const [checked, setChecked] = React.useState(false);\n      \n      return (\n        <DropdownMenu>\n          <DropdownMenuTrigger>Open Menu</DropdownMenuTrigger>\n          <DropdownMenuContent>\n            <DropdownMenuCheckboxItem\n              checked={checked}\n              onCheckedChange={(value) => {\n                setChecked(value);\n                handleCheckedChange(value);\n              }}\n            >\n              Toggle Option\n            </DropdownMenuCheckboxItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      );\n    }\n    \n    render(<TestComponent />);\n    \n    // Open the menu\n    await userEvent.click(screen.getByText('Open Menu'));\n    \n    // Click the checkbox item\n    await waitFor(() => {\n      expect(screen.getByText('Toggle Option')).toBeInTheDocument();\n    });\n    await userEvent.click(screen.getByText('Toggle Option'));\n    \n    // Check if handler was called with true\n    expect(handleCheckedChange).toHaveBeenCalledWith(true);\n  });\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"related-components",children:"Related Components"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/nextjs-ts-tailwind-supabase-starter/components/navigation/navigation-menu",children:"NavigationMenu"}),": For main navigation with link-based navigation patterns"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/nextjs-ts-tailwind-supabase-starter/components/forms/select",children:"Select"}),": For selecting a single value from a list of options"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/nextjs-ts-tailwind-supabase-starter/components/ui/dialog",children:"Dialog"}),": For displaying content that requires user interaction in a modal"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/nextjs-ts-tailwind-supabase-starter/components/ui/popover",children:"Popover"}),": For displaying floating content that doesn't close when interacting with other parts of the page"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://ui.shadcn.com/docs/components/context-menu",children:"ContextMenu"}),": Similar to DropdownMenu but triggered by right-click instead of a button"]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>i});var r=o(6540);const t={},d=r.createContext(t);function s(e){const n=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);