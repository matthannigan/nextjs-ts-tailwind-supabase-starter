"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[8484],{7971:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"components/ui/tabs","title":"Tabs Component","description":"A set of layered sections of content\u2014known as tab panels\u2014that are displayed one at a time, providing an intuitive way to organize and navigate through related content within a limited space.","source":"@site/docs/components/ui/tabs.md","sourceDirName":"components/ui","slug":"/components/ui/tabs","permalink":"/nextjs-ts-tailwind-supabase-starter/components/ui/tabs","draft":false,"unlisted":false,"editUrl":"https://github.com/matthannigan/nextjs-ts-tailwind-supabase-starter/tree/main/docs-website/docs/components/ui/tabs.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Tabs"},"sidebar":"components","previous":{"title":"Table","permalink":"/nextjs-ts-tailwind-supabase-starter/components/ui/table"},"next":{"title":"Toast","permalink":"/nextjs-ts-tailwind-supabase-starter/components/ui/toast"}}');var a=s(4848),r=s(8453);const i={sidebar_label:"Tabs"},l="Tabs Component",o={},c=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Controlled Tabs",id:"controlled-tabs",level:3},{value:"Disabled Tabs",id:"disabled-tabs",level:3},{value:"Props",id:"props",level:2},{value:"Tabs",id:"tabs",level:3},{value:"TabsList",id:"tabslist",level:3},{value:"TabsTrigger",id:"tabstrigger",level:3},{value:"TabsContent",id:"tabscontent",level:3},{value:"TypeScript",id:"typescript",level:2},{value:"Customization",id:"customization",level:2},{value:"Style Overrides",id:"style-overrides",level:3},{value:"Extending the Component",id:"extending-the-component",level:3},{value:"Examples",id:"examples",level:2},{value:"Integration with Forms",id:"integration-with-forms",level:3},{value:"Integration with Other Components",id:"integration-with-other-components",level:3},{value:"Responsive Behavior",id:"responsive-behavior",level:3},{value:"Accessibility",id:"accessibility",level:2},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Common Pitfalls",id:"common-pitfalls",level:2},{value:"Testing",id:"testing",level:2},{value:"Related Components",id:"related-components",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"tabs-component",children:"Tabs Component"})}),"\n",(0,a.jsx)(n.p,{children:"A set of layered sections of content\u2014known as tab panels\u2014that are displayed one at a time, providing an intuitive way to organize and navigate through related content within a limited space."}),"\n",(0,a.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import { Tabs, TabsList, TabsTrigger, TabsContent } from '@/components/ui/tabs';\n"})}),"\n",(0,a.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'<Tabs defaultValue="account">\n  <TabsList>\n    <TabsTrigger value="account">Account</TabsTrigger>\n    <TabsTrigger value="password">Password</TabsTrigger>\n  </TabsList>\n  <TabsContent value="account">\n    <p>Account tab content</p>\n  </TabsContent>\n  <TabsContent value="password">\n    <p>Password tab content</p>\n  </TabsContent>\n</Tabs>\n'})}),"\n",(0,a.jsx)(n.h3,{id:"controlled-tabs",children:"Controlled Tabs"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'import { useState } from \'react\';\n\nfunction ControlledTabs() {\n  const [activeTab, setActiveTab] = useState(\'account\');\n  \n  return (\n    <Tabs value={activeTab} onValueChange={setActiveTab}>\n      <TabsList>\n        <TabsTrigger value="account">Account</TabsTrigger>\n        <TabsTrigger value="password">Password</TabsTrigger>\n      </TabsList>\n      <TabsContent value="account">\n        <p>Account tab content</p>\n      </TabsContent>\n      <TabsContent value="password">\n        <p>Password tab content</p>\n      </TabsContent>\n    </Tabs>\n  );\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"disabled-tabs",children:"Disabled Tabs"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'<Tabs defaultValue="account">\n  <TabsList>\n    <TabsTrigger value="account">Account</TabsTrigger>\n    <TabsTrigger value="password">Password</TabsTrigger>\n    <TabsTrigger value="settings" disabled>Settings</TabsTrigger>\n  </TabsList>\n  <TabsContent value="account">\n    <p>Account tab content</p>\n  </TabsContent>\n  <TabsContent value="password">\n    <p>Password tab content</p>\n  </TabsContent>\n  <TabsContent value="settings">\n    <p>Settings tab content</p>\n  </TabsContent>\n</Tabs>\n'})}),"\n",(0,a.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,a.jsx)(n.h3,{id:"tabs",children:"Tabs"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Prop"}),(0,a.jsx)(n.th,{children:"Type"}),(0,a.jsx)(n.th,{children:"Default"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"value"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"string"})}),(0,a.jsx)(n.td,{children:"-"}),(0,a.jsx)(n.td,{children:"The controlled value of the tab to activate. Used when controlling the component."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"defaultValue"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"string"})}),(0,a.jsx)(n.td,{children:"-"}),(0,a.jsx)(n.td,{children:"The value of the tab that should be active when initially rendered. Use when not controlling the component."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"onValueChange"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"(value: string) => void"})}),(0,a.jsx)(n.td,{children:"-"}),(0,a.jsx)(n.td,{children:"Callback invoked when a tab is selected."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"orientation"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"'horizontal' | 'vertical'"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"'horizontal'"})}),(0,a.jsx)(n.td,{children:"The orientation of the component."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"dir"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"'ltr' | 'rtl'"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"'ltr'"})}),(0,a.jsx)(n.td,{children:"The reading direction of the tabs."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"activationMode"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"'automatic' | 'manual'"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"'automatic'"})}),(0,a.jsx)(n.td,{children:"Whether tabs are activated automatically on click or manually through arrow keys."})]})]})]}),"\n",(0,a.jsx)(n.h3,{id:"tabslist",children:"TabsList"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Prop"}),(0,a.jsx)(n.th,{children:"Type"}),(0,a.jsx)(n.th,{children:"Default"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"loop"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"boolean"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"true"})}),(0,a.jsxs)(n.td,{children:["When ",(0,a.jsx)(n.code,{children:"true"}),", keyboard navigation will loop from the last tab to the first and vice versa."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"className"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"string"})}),(0,a.jsx)(n.td,{children:"-"}),(0,a.jsx)(n.td,{children:"Additional class names for custom styling."})]})]})]}),"\n",(0,a.jsx)(n.h3,{id:"tabstrigger",children:"TabsTrigger"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Prop"}),(0,a.jsx)(n.th,{children:"Type"}),(0,a.jsx)(n.th,{children:"Default"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"value"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"string"})}),(0,a.jsx)(n.td,{children:"Required"}),(0,a.jsx)(n.td,{children:"A unique value that associates the trigger with a content panel."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"disabled"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"boolean"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"false"})}),(0,a.jsxs)(n.td,{children:["When ",(0,a.jsx)(n.code,{children:"true"}),", prevents the user from interacting with the tab."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"className"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"string"})}),(0,a.jsx)(n.td,{children:"-"}),(0,a.jsx)(n.td,{children:"Additional class names for custom styling."})]})]})]}),"\n",(0,a.jsx)(n.h3,{id:"tabscontent",children:"TabsContent"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Prop"}),(0,a.jsx)(n.th,{children:"Type"}),(0,a.jsx)(n.th,{children:"Default"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"value"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"string"})}),(0,a.jsx)(n.td,{children:"Required"}),(0,a.jsx)(n.td,{children:"A unique value that associates the content with a trigger."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"forceMount"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"boolean"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"false"})}),(0,a.jsxs)(n.td,{children:["Force mounting content when ",(0,a.jsx)(n.code,{children:"true"}),". Useful when controlling animations with React animation libraries."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"className"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"string"})}),(0,a.jsx)(n.td,{children:"-"}),(0,a.jsx)(n.td,{children:"Additional class names for custom styling."})]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"typescript",children:"TypeScript"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"// Component Type Definitions from Radix UI\nimport * as React from 'react';\nimport * as TabsPrimitive from '@radix-ui/react-tabs';\n\n// Usage example with TypeScript\ninterface TabData {\n  value: string;\n  label: string;\n  content: React.ReactNode;\n  disabled?: boolean;\n}\n\nfunction TypedTabs({ tabs }: { tabs: TabData[] }) {\n  return (\n    <Tabs defaultValue={tabs[0]?.value}>\n      <TabsList>\n        {tabs.map((tab) => (\n          <TabsTrigger \n            key={tab.value} \n            value={tab.value}\n            disabled={tab.disabled}\n          >\n            {tab.label}\n          </TabsTrigger>\n        ))}\n      </TabsList>\n      {tabs.map((tab) => (\n        <TabsContent key={tab.value} value={tab.value}>\n          {tab.content}\n        </TabsContent>\n      ))}\n    </Tabs>\n  );\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"customization",children:"Customization"}),"\n",(0,a.jsx)(n.h3,{id:"style-overrides",children:"Style Overrides"}),"\n",(0,a.jsx)(n.p,{children:"The component can be customized using the following approaches:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Using the ",(0,a.jsx)(n.code,{children:"className"})," prop to add additional Tailwind classes to any component"]}),"\n",(0,a.jsx)(n.li,{children:"Modifying the component styles directly in the source file"}),"\n",(0,a.jsx)(n.li,{children:"Using CSS variables for theming"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'// Custom styled tabs\n<Tabs defaultValue="account">\n  <TabsList className="grid w-full grid-cols-2 bg-gray-100 rounded-xl p-1">\n    <TabsTrigger \n      value="account" \n      className="data-[state=active]:bg-white data-[state=active]:text-primary rounded-lg"\n    >\n      Account\n    </TabsTrigger>\n    <TabsTrigger \n      value="password"\n      className="data-[state=active]:bg-white data-[state=active]:text-primary rounded-lg"\n    >\n      Password\n    </TabsTrigger>\n  </TabsList>\n  <TabsContent value="account" className="mt-6 p-4 bg-white rounded-lg">\n    <p>Account tab content</p>\n  </TabsContent>\n  <TabsContent value="password" className="mt-6 p-4 bg-white rounded-lg">\n    <p>Password tab content</p>\n  </TabsContent>\n</Tabs>\n'})}),"\n",(0,a.jsx)(n.h3,{id:"extending-the-component",children:"Extending the Component"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'import { Tabs, TabsList, TabsTrigger, TabsContent } from \'@/components/ui/tabs\';\n\nexport function IconTabs() {\n  return (\n    <Tabs defaultValue="profile" className="w-full">\n      <TabsList className="grid w-full grid-cols-3">\n        <TabsTrigger value="profile" className="flex items-center gap-2">\n          <UserIcon className="h-4 w-4" />\n          <span>Profile</span>\n        </TabsTrigger>\n        <TabsTrigger value="dashboard" className="flex items-center gap-2">\n          <LayoutDashboardIcon className="h-4 w-4" />\n          <span>Dashboard</span>\n        </TabsTrigger>\n        <TabsTrigger value="settings" className="flex items-center gap-2">\n          <SettingsIcon className="h-4 w-4" />\n          <span>Settings</span>\n        </TabsTrigger>\n      </TabsList>\n      <TabsContent value="profile">Profile content</TabsContent>\n      <TabsContent value="dashboard">Dashboard content</TabsContent>\n      <TabsContent value="settings">Settings content</TabsContent>\n    </Tabs>\n  );\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(n.h3,{id:"integration-with-forms",children:"Integration with Forms"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'import { useForm } from \'react-hook-form\';\nimport { zodResolver } from \'@hookform/resolvers/zod\';\nimport { z } from \'zod\';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \'@/components/ui/tabs\';\nimport { Input } from \'@/components/ui/input\';\nimport { Button } from \'@/components/ui/button\';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \'@/components/ui/form\';\n\nconst userFormSchema = z.object({\n  username: z.string().min(2).max(50),\n  email: z.string().email(),\n  password: z.string().min(8)\n});\n\ntype UserFormValues = z.infer<typeof userFormSchema>;\n\nexport function UserSettingsForm() {\n  const form = useForm<UserFormValues>({\n    resolver: zodResolver(userFormSchema),\n    defaultValues: {\n      username: \'\',\n      email: \'\',\n      password: \'\'\n    }\n  });\n  \n  function onSubmit(data: UserFormValues) {\n    console.log(data);\n  }\n  \n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-8">\n        <Tabs defaultValue="account" className="w-full">\n          <TabsList className="grid w-full grid-cols-2">\n            <TabsTrigger value="account">Account</TabsTrigger>\n            <TabsTrigger value="password">Password</TabsTrigger>\n          </TabsList>\n          <TabsContent value="account" className="space-y-4 pt-4">\n            <FormField\n              control={form.control}\n              name="username"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Username</FormLabel>\n                  <FormControl>\n                    <Input placeholder="Enter username" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name="email"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Email</FormLabel>\n                  <FormControl>\n                    <Input placeholder="Enter email" type="email" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </TabsContent>\n          <TabsContent value="password" className="space-y-4 pt-4">\n            <FormField\n              control={form.control}\n              name="password"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>New Password</FormLabel>\n                  <FormControl>\n                    <Input placeholder="Enter password" type="password" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </TabsContent>\n        </Tabs>\n        <Button type="submit">Save changes</Button>\n      </form>\n    </Form>\n  );\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"integration-with-other-components",children:"Integration with Other Components"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'import { Card, CardContent, CardDescription, CardHeader, CardTitle } from \'@/components/ui/card\';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \'@/components/ui/tabs\';\n\nexport function DashboardTabs() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Dashboard</CardTitle>\n        <CardDescription>View and manage your account details.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Tabs defaultValue="overview">\n          <TabsList>\n            <TabsTrigger value="overview">Overview</TabsTrigger>\n            <TabsTrigger value="analytics">Analytics</TabsTrigger>\n            <TabsTrigger value="reports">Reports</TabsTrigger>\n          </TabsList>\n          <TabsContent value="overview" className="pt-4">\n            Overview content goes here...\n          </TabsContent>\n          <TabsContent value="analytics" className="pt-4">\n            Analytics content goes here...\n          </TabsContent>\n          <TabsContent value="reports" className="pt-4">\n            Reports content goes here...\n          </TabsContent>\n        </Tabs>\n      </CardContent>\n    </Card>\n  );\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"responsive-behavior",children:"Responsive Behavior"}),"\n",(0,a.jsx)(n.p,{children:"The component responds to different screen sizes in the following ways:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Mobile"}),": On small screens, tabs can stack vertically by adding responsive classes:"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'<TabsList className="flex-col sm:flex-row">\n  <TabsTrigger value="tab1">Tab 1</TabsTrigger>\n  <TabsTrigger value="tab2">Tab 2</TabsTrigger>\n</TabsList>\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Tablet"}),": On medium screens, tabs can adjust their padding and sizing:"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'<TabsList className="px-1 sm:px-2">\n  <TabsTrigger className="px-2 py-1 sm:px-4 sm:py-2" value="tab1">\n    Tab 1\n  </TabsTrigger>\n  <TabsTrigger className="px-2 py-1 sm:px-4 sm:py-2" value="tab2">\n    Tab 2\n  </TabsTrigger>\n</TabsList>\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Desktop"}),": On larger screens, tabs can expand to fill available space:"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'<TabsList className="w-full md:w-auto">\n  <TabsTrigger value="tab1">Tab 1</TabsTrigger>\n  <TabsTrigger value="tab2">Tab 2</TabsTrigger>\n</TabsList>\n'})}),"\n",(0,a.jsx)(n.p,{children:"For very long lists of tabs that might not fit on smaller screens, consider using overflow with horizontal scrolling:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'<TabsList className="w-full overflow-x-auto flex-nowrap">\n  <TabsTrigger value="tab1">Tab 1</TabsTrigger>\n  <TabsTrigger value="tab2">Tab 2</TabsTrigger>\n  <TabsTrigger value="tab3">Tab 3</TabsTrigger>\n  <TabsTrigger value="tab4">Tab 4</TabsTrigger>\n  <TabsTrigger value="tab5">Tab 5</TabsTrigger>\n</TabsList>\n'})}),"\n",(0,a.jsx)(n.h2,{id:"accessibility",children:"Accessibility"}),"\n",(0,a.jsx)(n.p,{children:"The Tabs component follows the WAI-ARIA Tabs design pattern and includes the following accessibility features:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Proper ARIA Roles"}),": The component uses appropriate ARIA roles (",(0,a.jsx)(n.code,{children:"tablist"}),", ",(0,a.jsx)(n.code,{children:"tab"}),", ",(0,a.jsx)(n.code,{children:"tabpanel"}),") automatically."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Keyboard Navigation"}),":","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Tab"})," to focus on the active tab"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Arrow Left/Right"})," to navigate between tabs horizontally"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Arrow Up/Down"})," to navigate between tabs vertically (when using vertical orientation)"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Home/End"})," to navigate to the first/last tab"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Space/Enter"})," to activate the focused tab"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Focus Management"}),": Focus is properly managed when switching tabs."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Screen Reader Announcements"}),": Tab selection changes are properly announced to screen readers."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"State Management"}),": Active and disabled states are visually indicated and communicated to assistive technologies."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,a.jsx)(n.p,{children:"The component:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Is built on top of Radix UI's accessible Tabs primitive"}),"\n",(0,a.jsx)(n.li,{children:"Uses CSS transitions for smooth tab switching effects"}),"\n",(0,a.jsx)(n.li,{children:"Leverages Tailwind CSS for styling with proper focus and hover states"}),"\n",(0,a.jsx)(n.li,{children:"Supports both controlled and uncontrolled usage patterns"}),"\n",(0,a.jsx)(n.li,{children:"Can be integrated with form libraries like react-hook-form"}),"\n",(0,a.jsx)(n.li,{children:"Maintains content in the DOM even when not visible (hidden with CSS), which helps preserve state"}),"\n",(0,a.jsxs)(n.li,{children:["Can conditionally render tab content using the ",(0,a.jsx)(n.code,{children:"forceMount"})," prop when needed for animations"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"common-pitfalls",children:"Common Pitfalls"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Missing Values"}),": Ensure each ",(0,a.jsx)(n.code,{children:"TabsTrigger"})," and ",(0,a.jsx)(n.code,{children:"TabsContent"})," has a matching ",(0,a.jsx)(n.code,{children:"value"})," prop, or tabs won't work correctly."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Controlled Component Issues"}),": When using controlled mode with ",(0,a.jsx)(n.code,{children:"value"})," and ",(0,a.jsx)(n.code,{children:"onValueChange"}),", make sure the state is correctly managed to avoid unexpected behavior."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Accessibility for Dynamic Tabs"}),": When generating tabs dynamically, ensure proper labeling and id references are maintained."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"CSS Display Properties"}),": Avoid overriding the ",(0,a.jsx)(n.code,{children:"display"})," property on tab components as it may break the layout and interactions."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Next.js Client Components"}),": Remember that Tabs uses client-side interactivity, so ensure you add the ",(0,a.jsx)(n.code,{children:"'use client'"})," directive at the top of any file using the Tabs component."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"// Example test for the Tabs component\nimport { render, screen } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\n\ndescribe('Tabs', () => {\n  it('renders correctly with the default tab selected', () => {\n    render(\n      <Tabs defaultValue=\"tab1\">\n        <TabsList>\n          <TabsTrigger value=\"tab1\">Tab 1</TabsTrigger>\n          <TabsTrigger value=\"tab2\">Tab 2</TabsTrigger>\n        </TabsList>\n        <TabsContent value=\"tab1\">Tab 1 content</TabsContent>\n        <TabsContent value=\"tab2\">Tab 2 content</TabsContent>\n      </Tabs>\n    );\n    \n    expect(screen.getByRole('tab', { name: 'Tab 1' })).toHaveAttribute('aria-selected', 'true');\n    expect(screen.getByText('Tab 1 content')).toBeInTheDocument();\n    expect(screen.queryByText('Tab 2 content')).toBeInTheDocument();\n  });\n  \n  it('switches tab when clicked', async () => {\n    const user = userEvent.setup();\n    \n    render(\n      <Tabs defaultValue=\"tab1\">\n        <TabsList>\n          <TabsTrigger value=\"tab1\">Tab 1</TabsTrigger>\n          <TabsTrigger value=\"tab2\">Tab 2</TabsTrigger>\n        </TabsList>\n        <TabsContent value=\"tab1\">Tab 1 content</TabsContent>\n        <TabsContent value=\"tab2\">Tab 2 content</TabsContent>\n      </Tabs>\n    );\n    \n    const tab2 = screen.getByRole('tab', { name: 'Tab 2' });\n    await user.click(tab2);\n    \n    expect(tab2).toHaveAttribute('aria-selected', 'true');\n    expect(screen.getByText('Tab 2 content')).toBeVisible();\n  });\n  \n  it('respects the disabled state', async () => {\n    const user = userEvent.setup();\n    \n    render(\n      <Tabs defaultValue=\"tab1\">\n        <TabsList>\n          <TabsTrigger value=\"tab1\">Tab 1</TabsTrigger>\n          <TabsTrigger value=\"tab2\" disabled>Tab 2</TabsTrigger>\n        </TabsList>\n        <TabsContent value=\"tab1\">Tab 1 content</TabsContent>\n        <TabsContent value=\"tab2\">Tab 2 content</TabsContent>\n      </Tabs>\n    );\n    \n    const tab2 = screen.getByRole('tab', { name: 'Tab 2' });\n    expect(tab2).toBeDisabled();\n    \n    await user.click(tab2);\n    expect(screen.getByRole('tab', { name: 'Tab 1' })).toHaveAttribute('aria-selected', 'true');\n  });\n});\n"})}),"\n",(0,a.jsx)(n.h2,{id:"related-components",children:"Related Components"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/nextjs-ts-tailwind-supabase-starter/components/ui/card",children:"Card"}),": Often used to contain tab components for a more structured UI"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/nextjs-ts-tailwind-supabase-starter/components/forms/form",children:"Form"}),": Can be integrated with tabs for multi-step forms"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/nextjs-ts-tailwind-supabase-starter/components/ui/dialog",children:"Dialog"}),": Can contain tabs for organizing content in modal dialogs"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var t=s(6540);const a={},r=t.createContext(a);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);